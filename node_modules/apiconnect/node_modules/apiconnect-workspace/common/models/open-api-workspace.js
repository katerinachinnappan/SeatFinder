/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-workspace

var g = require('strong-globalize')();
var loopback = require('loopback');
var mkdirp = require('mkdirp');
var path = require('path');

module.exports = function(OpenApiWorkspace) {
  OpenApiWorkspace.getAvailableTemplates = function(cb) {
    cb(null, [
      'default',
    ]);
  };

  loopback.remoteMethod(OpenApiWorkspace.getAvailableTemplates, {
     http: { verb: 'get', path: '/templates' },
     returns: { arg: 'templates', type: 'array' },
   });

   OpenApiWorkspace.createFromTemplate = function(templateName, name, basePath, cb) {
     if (!name || !basePath) {
       cb(new Error(g.f('Please specify the name and basePath for the project')));
     }

     if (!templateName || templateName === 'default') {
       mkdirp(path.join(basePath, name), function(err) {
         cb(err, { path: path.join(basePath, name) });
       });
     } else {
       cb(new Error(g.f('Unknown template: %s',  templateName)));
     }
   };

   loopback.remoteMethod(OpenApiWorkspace.createFromTemplate, {
      http: { verb: 'post', path: '/' },
      accepts: [
        { arg: 'templateName', type: 'string' },
        { arg: 'name', type: 'string' },
        { arg: 'basePath', type: 'string' },
      ],
      returns: { arg: 'project', root: true, type: 'object' }
    });
};

