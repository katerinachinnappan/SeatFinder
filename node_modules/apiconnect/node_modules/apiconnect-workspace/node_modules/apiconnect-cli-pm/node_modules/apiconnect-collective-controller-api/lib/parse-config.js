// Copyright IBM Corp. 2016,2017. All Rights Reserved.
// Node module: apiconnect-collective-controller-api
// US Government Users Restricted Rights - Use, duplication or disclosure
// restricted by GSA ADP Schedule Contract with IBM Corp.

'use strict';

var extend = require('./util').extend;
var fs = require('fs');
var path = require('path');

module.exports = exports = parseConfig;

/**
 * Load configuration from the disk based on the provided options.
 * Any key-values loaded from the on-disk configuration will override
 * matching key-values in the provided options object!
 * @function parseConfig
 * @param {object} options The options object.
 * @property {string} configFile The disk path to the config file.
 * @returns {options} The original options object, extended with any
 * configuration loaded by this function.
 * @private
 */
function parseConfig(options) {
  if (options.configFile) {
    try {
      var config = JSON.parse(
        fs.readFileSync(path.resolve(options.configFile))
      );
      options = extend(config, options);
    } catch (err) {
      return {
        error: err,
      };
    }
  }
  return options;
}
