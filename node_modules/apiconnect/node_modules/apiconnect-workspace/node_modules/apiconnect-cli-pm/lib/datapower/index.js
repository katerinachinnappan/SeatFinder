/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-pm

'use strict';

var Promise = require('bluebird');
var path = require('path');
var logger = require('apiconnect-cli-logger');
var request = require('request');
var f = require('util').format;
var fs = require('fs');

module.exports = {
  prepareForShutdown: prepareForShutdown,
};

function prepareForShutdown(asyncService) {
  if (asyncService &&
      asyncService.env &&
      asyncService.env.__APIC_GW &&
      asyncService.env.PROJECT_DIR) {
    var dds = path.join(asyncService.env.PROJECT_DIR, '.datastore');
    var datastore;
    try {
      datastore = JSON.parse(fs.readFileSync(dds));
    } catch (err) {
      // this can happen when 'apic start' fails followed by another attempt to 'apic start'
      logger.debug('datapower.cleanupBeforeRestart datastore', err.message || err, asyncService);
      return asyncService;
    }
    if (datastore.datapower) {
      logger.debug('datapower.cleanupBeforeRestart', asyncService);
      return new Promise(function(resolve) {
        var host = datastore.host;
        var port = datastore.port;
        if (host === '::') {
          host = '127.0.0.1';
        }
        var url = f('http://%s:%d/api/prepare-for-shutdown', host, port);
        request(url, function() {
          resolve(asyncService);
        });
      });
    }
  }
  return asyncService;
};

