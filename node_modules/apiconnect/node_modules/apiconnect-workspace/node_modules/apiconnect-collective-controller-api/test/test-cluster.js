// Copyright IBM Corp. 2016. All Rights Reserved.
// Node module: apiconnect-collective-controller-api
// US Government Users Restricted Rights - Use, duplication or disclosure
// restricted by GSA ADP Schedule Contract with IBM Corp.

'use strict';

var cluster = require('../lib/cluster');
var tap = require('tap');

tap.test('Test File Service', function(t) {

  var options = {
    srcFile: 'testSrcFile',
    host: 'testHostname',
    port: 9443,
    username: 'admin',
    password: 'admin',
    keystorePassword: 'admin',
    instances: 2,
    appPackage: 'testPackage.tgz',
    serverName: 'as-member-01',
    wlpnUserDir: '/Users/pthieu/wlpn',
    rpcUser: 'testUser',
    rpcPassword: 'testPassword',
    clusterName: 'testCluster',
  };

  t.test('Parameter Omissions', function(t) {
    t.test('Omit clusterName from listMembers', function(t) {
      t.throws(function() {
        cluster.listMembers();
      }, {}, 'should throw on missing clusterName');
      t.end();
    });

    t.test('Omit clusterName from stopCluster', function(t) {
      t.throws(function() {
        cluster.stopCluster();
      }, {}, 'should throw on missing clusterName');
      t.end();
    });

    t.test('Omit clusterName from startCluster', function(t) {
      t.throws(function() {
        cluster.startCluster();
      }, {}, 'should throw on missing clusterName');
      t.end();
    });

    t.test('Omit clusterName from restartCluster', function(t) {
      t.throws(function() {
        cluster.startCluster();
      }, {}, 'should throw on missing clusterName');
      t.end();
    });
    t.end();
  });

  t.test('listClusterNames - Success', function(t) {
    t.plan(3);
    var data = ['data'];
    options.request = function(options, notUsed, command, cb) {
      cb(null, data);
    };
    t.doesNotThrow(function() {
      cluster.listClusterNames(options, checkData);
    }, {}, 'should not throw going through');

    function checkData(err, result) {
      t.ifErr(err);
      t.match(result, data, 'data should go through entire function');
    }
    t.end();
  });

  t.end();
});
