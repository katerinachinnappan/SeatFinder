// Copyright IBM Corp. 2016. All Rights Reserved.
// Node module: apiconnect-collective-controller-api
// US Government Users Restricted Rights - Use, duplication or disclosure
// restricted by GSA ADP Schedule Contract with IBM Corp.

'use strict';

var _ = require('lodash');
var fileService = require('../lib/file-service');
var path = require('path');
var tap = require('tap');

tap.test('Test File Service', function(t) {

  var options = {
    appDir: '${wlp.user.dir}/file-upload',
    appPackage: 'test.tgz', // deploy only
    host: '127.0.0.1',
    keystorePassword: 'admin', // deploy only
    password: 'admin',
    port: 9999,
    rpcPassword: 'admin', // deploy only
    rpcUser: 'admin', // deploy only
    serverName: 'ds-member5', // deploy only
    srcFile: path.resolve(__dirname, 'fixtures', 'test.tgz'), // upload only
    username: 'admin',
    wlpnUserDir: '/Users/user/wlpn', // deploy
  };

  t.test('Parameter Omissions', function(t) {
    t.test('Omit appPackage and srcFile', function(t) {
      t.throws(function() {
        fileService.deploy(_.omit(options, ['appPackage', 'srcFile']));
      }, {}, 'should throw on missing appPackage');
      t.end();
    });

    t.test('Omit host', function(t) {
      t.throws(function() {
        fileService.upload(_.omit(options, 'host'));
      }, {}, 'should throw on missing host');
      t.throws(function() {
        fileService.deploy(_.omit(options, 'host'));
      }, {}, 'should throw on missing host');
      t.end();
    });

    t.test('Omit keystorePassword', function(t) {
      t.throws(function() {
        fileService.deploy(_.omit(options,
          'keystorePassword'));
      }, {}, 'should throw on missing keystorePassword');
      t.end();
    });

    t.test('Omit password', function(t) {
      t.throws(function() {
        fileService.upload(_.omit(options, 'password'));
      }, {}, 'should throw on missing password');
      t.throws(function() {
        fileService.deploy(_.omit(options, 'password'));
      }, {}, 'should throw on missing password');
      t.end();
    });

    t.test('Omit port', function(t) {
      t.throws(function() {
        fileService.upload(_.omit(options, 'port'));
      }, {}, 'should throw on missing port');
      t.throws(function() {
        fileService.deploy(_.omit(options, 'port'));
      }, {}, 'should throw on missing port');
      t.end();
    });


    t.test('Omit serverName', function(t) {
      t.throws(function() {
        fileService.deploy(_.omit(options, 'serverName'));
      }, {}, 'should throw on missing serverName');
      t.end();
    });

    t.test('Omit srcFile', function(t) {
      t.throws(function() {
        fileService.upload(_.omit(options, 'srcFile'));
      }, {}, 'should throw on missing srcFile');
      t.end();
    });

    t.test('Omit username', function(t) {
      t.throws(function() {
        fileService.upload(_.omit(options, 'username'));
      }, {}, 'should throw on missing username');
      t.throws(function() {
        fileService.deploy(_.omit(options, 'username'));
      }, {}, 'should throw on missing username');
      t.end();
    });

    t.end();
  });
  t.end();
});
