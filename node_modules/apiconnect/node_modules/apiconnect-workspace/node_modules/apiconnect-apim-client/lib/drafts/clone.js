/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-apim-client

'use strict';

var Promise = require('bluebird');
var _ = require('lodash');
var config = require('apiconnect-config');
var list = require('./list');
var logger = require('apiconnect-cli-logger');
var pull = require('./pull');
var validator = require('../opts-validator');

/**
 * @typedef Result
 * @param {string} name of the definition
 * @param {string} version o
 * @param {string} file fully qualified path to the downloaded file
 * @param {string} organization
 * @param {string} type [product|api|wsdl]
 */

/**
 * Pull all API and product definitions from drafts
 *
 * @param {object} options
 * @param {string} options.organization (required)
 * @param {string} options.dir directory to clone files to. (process.cwd() if omitted)
 *
 * @return Promise.<Array<@Result>>
 */
function clone(options) {
  var concurrency = parseInt(config.loadConfig().getOne('concurrency'), 10) || config.DEFAULT_CONCURRENCY;
  logger.debug('Concurrency used: %d', concurrency);
  return validator(options, [ 'organization' ])
    .then(list.bind(null, options))
    .then(function(artifacts) {
      return Promise.map(artifacts, function(artifact) {
        var opts = _.defaults({
          name: artifact.name,
          version: artifact.version,
          type: artifact.type.toLowerCase(),
          productOnly: artifact.type === 'product',
        }, options);
        return pull(opts);
      }, { concurrency: concurrency }).then(_.flatten);
    });
};

module.exports = clone;

