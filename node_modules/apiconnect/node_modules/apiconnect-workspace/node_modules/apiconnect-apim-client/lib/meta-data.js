/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-apim-client

'use strict';

var _ = require('lodash');
var reqOpts = require('./req-options');
var request = require('./request');
var validator = require('./opts-validator');

/**
 * @typedef ServerMetaData
 * @param {string} formFactor
 * @param {string} serverCapabilities
 * @param {string} toolkit
 */

/**
 * Get server ServerMetaData
 *
 * @param {object} options
 * @param {object} options.server
 *
 * @return Promise.<ServerMetaData>
 */
function get(options) {
  // We're doing some funny stuff here to follow the existing pattern.
  // creds: false means that when performing option validation, skip creds
  options = _.defaults({
    creds: false,
    url: '/v1/cloud/metadata/apimanager',
    json: true,
  }, options);
  return validator(options, [ 'server' ])
    .then(function() {
      // massage into exepcted creds.host
      options.creds = { host: options.server };
      return request(reqOpts(options));
    }).then(function(res) {
      return {
        formFactor: res[ 0 ].formFactor,
        serverCapabilities: res[ 0 ].serverCapabilities || {},
        toolkit: res[ 0 ].toolkit || {},
      };
    });
}

module.exports = {
  get: get,
};

