/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

var httpServer = require('http-server');
var open = require('open');
var path = require('path');
var portfinder = require('portfinder');

process.on("uncaughtException", function(err) {
  console.log("Unexpected error: " + err);
  console.log(err.stack);
});

function explore(apis, options, callback) {
  var staticAssetBase = __dirname;

  if (typeof options === 'function') {
    callback = options;
    options = {};
  } else if (!options) {
    options = {};
    callback = function() {};
  }

  var before = function (req, res) {
    if (req.url === '/assets/apis.js') {
      res.setHeader('Content-Type', 'text/javascript');
      return res.end(
        "window.apiConnectExplorer = {apis: " + JSON.stringify(apis) + "};"
      );
    }
    res.emit('next');
  };

  var server = httpServer.createServer({
    root: path.join(staticAssetBase, 'dist'),
    gzip: true,
    before: [before]
  });

  portfinder.basePort = process.env.PORT || 3000;
  var host = process.env.HOST || (options.external) ? '0.0.0.0' : '127.0.0.1';
  portfinder.getPort({host: host}, function (err, port) {
    if (err) {
      throw err;
    }
    var url = 'http://' + host + ':' + port;
    server.listen(port, host, function() {
      console.log('APIConnect Explorer listening on ' + url);
      open(url);
    });
  });

  return server;
};

module.exports = explore;

