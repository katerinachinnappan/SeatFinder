/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-catalogs


var g = require('strong-globalize')();
var logger = require('apiconnect-cli-logger');

function catalogFullId(server, org, catalog) {
  return 'apic-catalog://' + server + '/orgs/' + org + '/catalogs/' + catalog;
};

exports.listFormatter = function(result, orgOptions) {
  if (!Object.keys(result).length) {
    if (orgOptions.allOrganizations) {
      logger.error(g.f('No catalogs found in all organizations'));
    }
    logger.error(g.f('No catalogs found in org %s', orgOptions.organization));
  }
  result.forEach(function(catalog) {
    logger.writeln(catalogFullId(orgOptions.server, catalog.orgName, catalog.shortName));
  });
};

exports.createFormatter = function(result, options) {
  logger.writeln(g.f('Created %s:%s', options.organization, result.name));
};

exports.getFormatter = function(result, options) {
  logger.writeln(g.f('name: %s', result.shortName));
  logger.writeln(g.f('display name: %s', result.name));
  logger.writeln(g.f('owner: %s', result.owner.username));
  logger.writeln(g.f('organization: %s', options.organization));
  if (result.autoDeploy) {
    logger.writeln(g.f('type: development'));
  } else {
    logger.writeln(g.f('type: production'));
  }
  if (result.spaceEnabled) {
    logger.writeln(g.f('spaces: enabled'));
  } else {
    logger.writeln(g.f('spaces: disabled'));
  }
};

exports.deleteFormatter = function(catalogName, options) {
  logger.writeln(g.f('Deleted %s:%s', options.organization, catalogName));
};

exports.setFormatter = function(result, options) {
  logger.writeln(g.f('Updated catalog %s in %s', result.shortName, options.organization));
};

exports.transferFormatter = function(catalogName, options) {
  logger.writeln(g.f('Updated catalog %s in %s', catalogName, options.organization));
};

exports.error = function(error) {
  throw error;
};

