/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-catalogs

/*eslint brace-style: 0, max-len: 0*/

var g = require('strong-globalize')();

module.exports = {
  name: 'catalogs',
  version: require('../package.json').version,
  path: __filename,
  isBuiltin: true,
  topics: getTopics,
};

function getTopics() {
  return [ {
    name: 'catalogs',
    commands: [
      {
        command: 'list',
        loginRequired: 'org',
        aliases: [ 'catalogs' ],
        helpInfo: function() {
          return g.f('apic_catalogs_list_help.txt');
        },
        action: function(opts) {
          return require('./plugin-impl').catalogsList(opts);
        },
        options: [
          { name: 'all-organizations', rune: 'O', type: 'boolean' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs' },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'create <displayName>',
        loginRequired: 'org',
        helpInfo: function() {
          return g.f('apic_catalogs_create_help.txt');
        },
        action: function(displayName, opts) {
          return require('./plugin-impl').catalogsCreate(displayName, opts);
        },
        options: [
          { name: 'name' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'get <name>',
        loginRequired: 'org',
        helpInfo: function() {
          return g.f('apic_catalogs_get_help.txt');
        },
        action: function(name, opts) {
          return require('./plugin-impl').catalogsGet(name, opts);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'delete <name>',
        loginRequired: 'org',
        helpInfo: function() {
          return g.f('apic_catalogs_delete_help.txt');
        },
        action: function(name, opts) {
          return require('./plugin-impl').catalogsDelete(name, opts);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'set <name>',
        loginRequired: 'org',
        helpInfo: function() {
          return g.f('apic_catalogs_set_help.txt');
        },
        action: function(name, opts) {
          return require('./plugin-impl').catalogsSet(name, opts);
        },
        options: [
          { name: 'name' },
          { name: 'display-name' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
          { name: 'spaces', type: 'enum', values: [ 'enabled', 'disabled' ] },
        ],
      },
      {
        command: 'transfer <name> <userId>',
        loginRequired: 'org',
        helpInfo: function() {
          return g.f('apic_catalogs_transfer_help.txt');
        },
        action: function(name, userId, opts) {
          return require('./plugin-impl').catalogsTransfer(name, userId, opts);
        },
        options: [
            { name: 'name' },
            { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
            { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
    ],
  } ];
}

