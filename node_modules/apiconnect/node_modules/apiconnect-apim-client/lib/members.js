/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-apim-client

'use strict';

var Promise = require('bluebird');
var _ = require('lodash');
var f = require('util').format;
var reqOpts = require('./req-options');
var request = require('./request');
var validator = require('./opts-validator');

function list(options) {
  options = _.extend({
    scope: 'org',
  }, options);

  switch (options.scope) {
    case 'org':
      return validator(options, [ 'server', 'organization', 'scope' ]).then(function() {
        options = reqOpts(_.defaults({
          url: f('/v1/orgs/%s/members', options.organization),
          json: true,
        }, options));

        return request(options);
      });
    case 'consumer-org':
      return validator(options, [ 'server', 'organization', 'catalog', 'consumerOrg' ]).then(function() {
        options = reqOpts(_.defaults({
          url: f(
            '/v1/orgs/%s/environments/%s/consumerOrgs/%s/members',
            options.organization,
            options.catalog,
            options.consumerOrg
          ),
          json: true,
        }, options));

        return request(options);
      });
    default:
      var err = new Error(f('Invalid scope %s, valid scopes are "org" and "consumer-org"', options.scope));
      err.code = 'INVALID_SCOPE';
      err.obj = { scope: options.scope };
      return Promise.reject(err);
  }
};

module.exports = {
  list: list,
};

