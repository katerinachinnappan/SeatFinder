/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-apim-client

'use strict';

var _ = require('lodash');
var f = require('util').format;
var list = require('./list');
var reqOptions = require('../req-options');
var request = require('../request');
var validator = require('../opts-validator');

/**
 * Clear all draft APIs/Products.
 *
 * @param {object} options
 * @param {string} options.organization(required)
 *
 * @return Promise.<Array<{type, nameVersion, organization}>
 */
function clear(options) {
  var toRemove = validator(options, [ 'organization' ])
    // First query all api/products for this org and save away to return after
    // the clear has completed. Once the backend is fixed up we can remove
    // this business. apimesh/apim/issues/5202
    .then(_.bind(list, null, options));

  return toRemove.then(function() {
    // This occasionally fails to clear all products due to a backend bug. When they fix
    // remove this serial stuff -- apimesh/apim/issues/4944
    // return Promise.join(clearAPIs(options), clearProducts(options));
    return clearProducts(options).then(clearAPIs.bind(null, options));
  }).spread(function(apis, products) {
    // return Array.prototype.push(apis, products);
    return toRemove.value();
  });
};

var clearAPIsURLFormat = '/v1/apimanager/orgs/%s/apis';
function clearAPIs(options) {
  options = reqOptions(_.defaults({
    method: 'DELETE',
    url: f(clearAPIsURLFormat, options.organization),
  }, options));
  return request(options);
};

var clearProductsURLFormat = '/v1/orgs/%s/products';
function clearProducts(options) {
  options = reqOptions(_.defaults({
    method: 'DELETE',
    url: f(clearProductsURLFormat, options.organization),
  }, options));
  return request(options);
};

module.exports = clear;

