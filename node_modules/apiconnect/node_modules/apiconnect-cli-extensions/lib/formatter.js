/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-extensions


var g = require('strong-globalize')();
var logger = require('apiconnect-cli-logger');

module.exports.listFormatter = function(extensions) {
  extensions.forEach(function(extension) {
    logger.writeln(g.f('%s:%s in %s:%s', extension.name, extension.version, extension.organization, extension.catalog));
  });
};

module.exports.getFormatter = function(catalogName, orgName, result) {
  var extensionMetaData = result;

  logger.writeln(g.f('name: %s', extensionMetaData.info.name));
  logger.writeln(g.f('version: %s', extensionMetaData.info.version));
  logger.writeln(g.f('title: %s', extensionMetaData.info.title));
  logger.writeln(g.f('catalog: %s', catalogName));
  logger.writeln(g.f('organization: %s', orgName));
};

module.exports.pullFormatter = function(catalogName, orgName, result) {
  logger.writeln(g.f('Pulled %s:%s extension from %s:%s [%s]',
    result.extensionName, result.extensionVersion, orgName, catalogName, result.extensionFilename));
};

module.exports.publishFormatter = function(fileName, catalogName, orgName, result) {
  logger.writeln(g.f('Published %s extension to %s:%s [%s:%s]', fileName
    , orgName, catalogName, result.info.name, result.info.version));
};

module.exports.deleteFormatter = function(extensionName, extensionVersion, catalogName, orgName) {
  logger.writeln(g.f('Deleted %s:%s extension from %s:%s',
    extensionName, extensionVersion, orgName, catalogName));
};

