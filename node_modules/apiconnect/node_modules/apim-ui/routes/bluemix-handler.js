/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui
'use strict';

var express = require('express');
var router = express.Router();
var path = require('path');
var util = require('../common/util.js');

var bluemixHandler = require('../common/bluemix-handler');

router.get('/', function(req, res) {
  res.send({'hello': 'world'});
});

router.get('/instances/:instance/loggedIn', function(req, res) {
  bluemixHandler.isLoggedIn(req.params.instance)
  .then(function(response) {
    res.send(response);
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  });
});

router.get('/instances/:instance/status', function(req, res) {
  bluemixHandler.status(req.params.instance)
    .then(function(response) {
      res.send(response);
    })
    .catch(function(error) {
      res.status(error.statusCode || 500).send(util.packageError(error.error));
    });
});

router.post('/instances/:instance/login', function(req, res) {
  bluemixHandler.login(req.params.instance)
  .then(function(response) {
    res.send(response);
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  });
});

router.get('/instances/:instance/orgs', function(req, res) {
  bluemixHandler.getOrgs(req.params.instance)
  .then(function(response) {
    res.send(response);
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  })
});

router.get('/instances/:instance/orgs/:orgId/spaces', function(req, res) {
  bluemixHandler.getSpacesForOrg(req.params.instance, req.params.orgId)
  .then(function(response) {
    res.send(response);
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  })
});

router.get('/instances/:instance/spaces', function(req, res) {
  bluemixHandler.getSpaces(req.params.instance)
  .then(function(response) {
    res.send(response);
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  })
});

router.get('/instances/:instance/spaces/:spaceId/apps', function(req, res) {
  bluemixHandler.getApps(req.params.instance, req.params.spaceId)
  .then(function(response) {
    res.send(bluemixHandler.filterAppsWithSpaces(response));
  })
  .catch(function(error) {
    res.status(error.statusCode || 500).send(util.packageError(error.error));
  });
});

module.exports = router;

