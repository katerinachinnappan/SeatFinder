/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui
'use strict';

var express = require('express');
var router = express.Router();

var auth = require('../common/auth');

router.get('/login', function(req, res, next) {

  res.redirect(auth.getLoginUrl({
    host: req.query.host,
    returnTo: req.query.redirect || req.protocol + '://' + req.get('host') + '/auth/callback?host=' + req.body.apicHost
  }));

});

router.post('/login', function(req, res, next) {

  res.redirect(auth.getLoginUrl({
    host: req.body.apicHost,
    returnTo: req.query.redirect || req.protocol + '://' + req.get('host') + '/auth/callback?host=' + req.body.apicHost
  }));

});

router.get('/callback', function(req, res, next) {

  var authCode = req.query.code;
  auth.login({
    type: 'code',
    code: authCode,
    host: req.query.host
  }).then(function(token) {
    res.redirect('/')
  }).catch(function(err) {
    console.error(err);
    auth.setConnectivity('offline');
    res.redirect('/');
  });

});

router.get('/targetCallback', function(req, res, next) {

  var authCode = req.query.code;
  auth.login({
    type: 'code',
    code: authCode,
    host: req.query.host
  }).then(function(token) {
    res.redirect('/targetLogin.html?loginURL=' + req.query.authEndpoint);
  }).catch(function(err) {
    res.redirect('/targetLogin.html?error=true&loginURL=' + req.query.authEndpoint);
  });

});

router.get('/logout', function(req, res, next) {
  auth.logout();
  res.redirect('/');
});

router.requireLogin = function(req, res, next) {
  auth.hasInternetConnectivity().then(function(isOnline) {

    auth.isLoggedIn({
      tokenOnly: true
    })
      .then(function(status) {
        if (status.loggedIn || !isOnline || (typeof process.env.SKIP_LOGIN !== 'undefined' && process.env.SKIP_LOGIN === 'true')) {
          return next();
        }

        res.redirect('/login.html');
      });

  });
};

module.exports = router;

