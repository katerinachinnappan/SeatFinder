/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Services */

var catalogs = angular.module('apim.catalogs');

catalogs.factory('AppList', ['$resource',
  function($resource) {
    return $resource('proxy/orgs/:orgId/provider-apps/:appId', {}, {
      query: {method: 'GET', params: {orgId: '@orgId'}, isArray: true},
      get: {method: 'GET', params: {orgId: '@orgId', appId: '@appId'}, isArray: false},
      update: {method: 'PUT', params: {orgId: '@orgId', appId: '@appId'}, isArray: false,
        transformRequest: function(data, headersGetter) {
          var ret = angular.copy(data);
          // scrub all old collective data and make new collective entry
          if (ret.liberty && ret.liberty.collective) {
            delete ret.liberty.collective;
          }
          ret.liberty.collective = data.liberty.collective.id;
          return JSON.stringify(ret);
        }},
      remove: {method: 'DELETE', params: {orgId: '@orgId', appId: '@appId'}, isArray: false}
    });
  }
]);

catalogs.factory('CollectivesList', ['$resource',
  function($resource) {
    return $resource('proxy/collectives/:id/:apps', {}, {
      query: {method: 'GET', isArray: true},
      queryApps: {method: 'GET', params: {id: '@id', apps: 'apps'}, isArray: true}
    });
  }
]);

