/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/**
  * Use this directive to create bluemix type overflow menu
  * Must use "bxOfMenuItem" directives as children for it to work effectively
  *
  * Usage:
  * <bx-overflow-menu>
  *   <bx-overflow-menu-item item-text="menu1"> </bx-overflow-menu-item>
  *   <bx-overflow-menu-item item-text="menu2" warn-user="true">
  *   </bx-overflow-menu-item>
  * </bx-overflow-menu>
  *
  * Attributes:
  * <bx-overflow-menu> : None
  * <bx-overflow-menu-item>:
  *    1. 'item-text': provide this value to display menu text
  *    2. 'warn-user': set this to `true` to enable bluemix styling for
  *    warning user of non-revertable actions such as `Delete`. Bluemix
  *    styling usually turns menu item background color to red when hovered.
  */

  angular.module('bluemix.components')
  .directive('bxOverflowMenu', ['$document', function($document) {
    return {
      restrict: 'E',
      transclude: true,
      controller: function($scope) {
        $scope.toggleOverflowMenu = function() {
          $scope.isOverflowMenuOpen = !$scope.isOverflowMenuOpen;
        };
      },
      templateUrl: 'apim/bluemix/components/overflow-menu/overflow-menu.template.html',
      link: function(scope, element, attrs) {
        var docClickHandler = function(event) {
          // close menu if clicked anywhere outside open menu
          var isOverflowMenuClicked = element[0].contains(event.target);
          if (isOverflowMenuClicked) {
            return;
          }
          scope.$apply(function() {
            scope.isOverflowMenuOpen = false;
          });
        };

        scope.$watch('isOverflowMenuOpen', function(newVal, oldVal) {
          if (newVal !== oldVal) {
            if (newVal) {
              $document.on('click', docClickHandler);
            } else {
              $document.off('click', docClickHandler);
            }
          }
        });
      }
    };
  }])
  .directive('bxOverflowMenuItem', function() {
    return {
      restrict: 'E',
      scope: {
        itemText: '@',
        warnUser: '@'
      },
      templateUrl: 'apim/bluemix/components/overflow-menu/overflow-menu-item.template.html'
    }
  });

