/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Services */

var objects = angular.module('apim.objects');

objects.factory('LtpaKey', ['$resource', function($resource) {
  return $resource('proxy/orgs/:orgId/managed-objects/:objId/:upload', {}, {
    query: {method:'GET', params:{orgId: '@orgId', objId: '@objId', expand: true, type: 'ltpa-key'}, isArray: true},
    update: {method:'PUT', params:{orgId: '@orgId', objId: '@objId'}, isArray: false},
    upload: {method:'POST', params:{orgId: '@orgId', objId: '@objId', upload: 'upload'}, isArray: false}
  });
}]);

objects.factory('Oauth', ['$resource',
  function($resource) {
    return $resource('proxy/orgs/:orgId/oauth/:objId/', {}, {
      query: {method: 'GET', params: {orgId: '@orgId', objId: '@objId'}, isArray: true},
      delete: {method: 'DELETE', params: {orgId: '@orgId', objId: '@objId'}, isArray: false},
      get: {method: 'GET', params: {orgId: '@orgId', objId: '@objId'}, isArray: false},
      save: {method: 'POST', params: {orgId: '@orgId', objId: '@objId'}, isArray: false},
      update: {method: 'PUT', params: {orgId: '@orgId', objId: '@objId'}, isArray: false}
    });
  }]);

objects.factory('Certificate', ['$resource', function($resource) {
  return $resource('proxy/orgs/:orgId/managed-objects/:objId/:upload', {}, {
    query: {method:'GET', params:{orgId: '@orgId', objId: '@objId', expand: true, type: 'public-key'}, isArray: true},
    update: {method:'PUT', params:{orgId: '@orgId', objId: '@objId'}, isArray: false},
    upload: {method:'POST', params:{orgId: '@orgId', objId: '@objId', upload: 'upload'}, isArray: false}
  });
}]);

objects.factory('PrivateKey', ['$resource', function($resource) {
  return $resource('proxy/orgs/:orgId/managed-objects/:objId/:upload', {}, {
    query: {method:'GET', params:{orgId: '@orgId', objId: '@objId', expand: true, type: 'private-key'}, isArray: true},
    update: {method:'PUT', params:{orgId: '@orgId', objId: '@objId'}, isArray: false},
    upload: {method:'POST', params:{orgId: '@orgId', objId: '@objId', upload: 'upload'}, isArray: false}
  });
}]);

objects.factory('KerberosKeytab', ['$resource', function($resource) {
  return $resource('proxy/orgs/:orgId/managed-objects/:objId/:upload', {}, {
    query: {method:'GET', params:{orgId: '@orgId', objId: '@objId', expand: true, type: 'kerberos-keytab'}, isArray: true},
    update: {method:'PUT', params:{orgId: '@orgId', objId: '@objId'}, isArray: false},
    upload: {method:'POST', params:{orgId: '@orgId', objId: '@objId', upload: 'upload'}, isArray: false}
  });
}]);

objects.factory('SharedSecret', ['$resource', function($resource) {
  return $resource('proxy/orgs/:orgId/managed-objects/:objId/:upload', {}, {
    query: {method:'GET', params:{orgId: '@orgId', objId: '@objId', expand: true, type: 'shared-secret'}, isArray: true},
    update: {method:'PUT', params:{orgId: '@orgId', objId: '@objId'}, isArray: false},
    upload: {method:'POST', params:{orgId: '@orgId', objId: '@objId', upload: 'upload'}, isArray: false}
  });
}]);

