/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Services */

  angular.module('apim')
  .factory('Bluemix', ['$resource', '$q', '$http', '$rootScope',  function($resource, $q, $http, $rootScope) {
    var returnedObj = {};

    returnedObj.orgs = $resource('bluemix/instances/:instance/orgs', {}, {
      query: {
        method: 'GET',
        isArray: true
      }
    });

    returnedObj.spaces = $resource('bluemix/instances/:instance/spaces', {}, {
      query: {
        method: 'GET',
        isArray: true
      }
    });

    returnedObj.apps = $resource('bluemix/instances/:instance/spaces/:spaceId/apps', {}, {
      query: {
        method: 'GET',
        params: {
          instances: '@instances',
          spaceId: '@spaceId'
        },
        isArray: true
      }
    });

    returnedObj.instances = $resource('bluemix/instances/:instance/:action', {}, {
      isLoggedIn: {
        method: 'GET',
        params: {
          instance: '@instance',
          action: 'loggedIn'
        },
        isArray: false
      },
      status: {
        method: 'GET',
        params: {
          instance: '@instance',
          action: 'status'
        },
        isArray: false
      },
      login: {
        method: 'POST',
        params: {
          instance: '@instance',
          action: 'login'
        },
        isArray: false
      }
    });

    returnedObj.getPlanId = function(spaceId){
      var deferred = $q.defer();
      if ($rootScope.planId) {
        deferred.resolve($rootScope.planId);
      }
      else {
        deferred.resolve(null);
      }
      return deferred.promise;
    };

    return returnedObj;
  }
  ]);
