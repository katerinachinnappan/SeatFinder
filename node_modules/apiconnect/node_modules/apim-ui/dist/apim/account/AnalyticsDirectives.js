/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

angular.module('apim.account')
  .directive('apimAnalyticsEnable', [
    '$rootScope',
    'AnalyticsServices',
    function(
      $rootScope,
      AnalyticsServices
    ) {
      return {
        restrict: 'A',
        scope: {},
        link: function(scope, el, attr) {
          scope.settings = {
            analytics: $rootScope.analytics
          };

          el.on('click', function(event) {
            event.stopPropagation();
            scope.settings.analytics = true;
            scope.opts = scope.$eval(attr.apimAnalyticsEnable);
            scope.triggerChat = scope.opts && scope.opts.triggerChat || false;

            AnalyticsServices.setEnableAnalytics(false, scope)
              .then($rootScope.$emit.bind($rootScope, 'event:closeModal'));
          });
        }
      }
    }])
  .directive('apimAnalyticsTerms', [
    '$rootScope',
    'AnalyticsServices',
    function(
      $rootScope,
      AnalyticsServices
    ) {
      return {
        restrict: 'A',
        scope: {},
        link: function(scope, el, attr) {
          scope.settings = {
            analytics: $rootScope.analytics
          };

          el.on('click', function(event) {
            event.stopPropagation();
            AnalyticsServices.showTerms(scope);
          });
        }
      }
    }])
  .directive('apimAnalyticsRemindMe', [
    '$rootScope',
    'ConfigServices',
    function(
      $rootScope,
      ConfigServices
    ) {
      return {
        restrict: 'A',
        scope: {},
        link: function(scope, el, attr) {
          scope.settings = {
            analytics: $rootScope.analytics
          };

          el.on('click', function(event) {
            event.stopPropagation();
            scope.remindMeLater();
          });

          scope.remindMeLater = function() {
            var now = moment();
            var later = now.add(30, 'days');

            ConfigServices.setReminderDate(later.format())
              .then($rootScope.$emit.bind($rootScope, 'event:closeModal'));
          };
        }
      }
    }])
  .directive('apimAnalyticsDoNotAsk', [
    '$rootScope',
    'ConfigServices',
    function(
      $rootScope,
      ConfigServices
    ) {
      return {
        restrict: 'A',
        scope: {},
        link: function(scope, el, attr) {
          scope.settings = {
            analytics: $rootScope.analytics
          };

          el.on('click', function(event) {
            event.stopPropagation();

            var now = moment();
            var later = now.add(100, 'years');

            ConfigServices.setReminderDate(later.format())
              .then($rootScope.$emit.bind($rootScope, 'event:closeModal'));
          });
        }
      }
    }]);

