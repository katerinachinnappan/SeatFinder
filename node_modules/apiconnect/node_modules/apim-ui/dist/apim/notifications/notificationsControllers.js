/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2015, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Controllers */

var notifications = angular.module('apim.notifications', ['ngResource']);

notifications.controller('NotificationsController', ['$scope', '$rootScope', 'Notifications', 'CMCNotifications', notificationsController]);

function notificationsController($scope, $rootScope, Notifications, CMCNotifications) {
  $scope.isCMC = $rootScope.context == "cmc";
  if (typeof(localStorage) !== "undefined") {
    $scope.view = localStorage.getItem("apim-notifications-view");
  }
  $scope.setView = function(view) {
    $scope.view = view;
    if (typeof(localStorage) !== "undefined") {
      localStorage.setItem("apim-notifications-view", view);
    }
    $scope.refreshNotifications();
  };
  $scope.pageSize = 20;
  $scope.currentOffset = 0;
  $scope.dataLoaded = false;
  $scope.$watch('currentOrg', function() {
    if (!$scope.currentOrg) return;
  });
  // resets the query with the current filter options
  $scope.refreshNotifications = function() {
    $scope.dataLoaded = false;
    $scope.endOfList = false;
    $scope.currentOffset = 0;
    if ($rootScope.context == "cmc") {
      $scope.notifications = CMCNotifications.query({
        type: $scope.view,
        first: $scope.currentOffset,
        max: $scope.pageSize
      });
    } else {
      $scope.notifications = Notifications.query({
        orgId: $scope.orgId,
        type: $scope.view,
        first: $scope.currentOffset,
        max: $scope.pageSize
      });
    }
    $scope.currentOffset += $scope.pageSize;
    $scope.notifications.$promise.then(function() {
      $scope.dataLoaded = true;
    }, function() {
      $scope.dataLoaded = true;
    });
  };
  $scope.nextPage = function() {
    $scope.fetchingPage = true;
    var notifications = null;
    if ($rootScope.context == "cmc") {
      notifications = CMCNotifications.query({
        type: $scope.view,
        first: $scope.currentOffset,
        max: $scope.pageSize
      });
    } else {
      notifications = Notifications.query({
        orgId: $scope.orgId,
        type: $scope.view,
        first: $scope.currentOffset,
        max: $scope.pageSize
      });
    }
    if (!$scope.notifications) {
      $scope.notifications = [];
    }
    $scope.currentOffset += $scope.pageSize;
    notifications.$promise.then(function(response) {
      var len = response.length;
      for (var i=0;i<len;i++) {
        $scope.notifications.push(response[i]);
      } // end for
      $scope.fetchingPage = false;
      if (len < $scope.pageSize) {
        $scope.endOfList = true;
      }
      $scope.dataLoaded = true;
    }, function() {
      $scope.fetchingPage = false;
      $scope.dataLoaded = true;
      $scope.endOfList = true;
    });
  };
  $scope.refreshView = function() {
    $scope.refreshNotifications();
  };
};

