/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Factories */

var apim = angular.module('apim');

apim.factory('$localStorage', [function(){
  var store = window.localStorage;

  function getItem(key){
    var item = store && store.getItem(key);

    if (typeof item === 'undefined' || item === null) return;

    return JSON.parse(item);
  }

  function setItem(key, val){
    val = store && typeof val !== 'undefined' && JSON.stringify(val);

    if (!val || val === '{}') return;

    store.setItem(key, val);
  }

  function removeItem(key){
    return store && store.removeItem(key);
  }

  return {
    getItem: getItem,
    setItem: setItem,
    removeItem: removeItem
  };
}]);

apim.service('DirtyService', [function() {
  var svc = this;
  var dirtyState = {}; // key and value pairs for current dirty states

  svc.setDirty = function(ctx) {
    if (ctx) {
      dirtyState[ctx] = true;
    }
  };

  svc.clearDirty = function(ctx) {
    if (ctx) {
      dirtyState[ctx] = false;
    } else {
      dirtyState = {};
    }
  };

  svc.isDirty = function(ctx) {
    if (ctx) {
      return !!dirtyState[ctx];
    }

    return Object.keys(dirtyState).some(function(key) {
      return dirtyState[key];
    });
  };
}]);

apim.service('ModalHelper', [
  '$modal',
  '$rootScope',
  function ($modal, $rootScope) {
    this.confirm = function (options) {
      var scope = options.scope ||
        angular.extend($rootScope.$new(), {
          confirmation: {
            confirmed: options.confirmation || angular.noop,
            rejected: options.rejected || angular.noop,
            titleKey: options.title,
            messageKey: options.message
          }
        });

      return $modal.open({
        templateUrl: 'apim/partials/confirmation.html',
        windowTemplateUrl: 'apim/partials/main-template.html',
        controller: 'ConfirmationController',
        size: options.size || 'sm',
        scope: scope
      });
    }
  }
]);

