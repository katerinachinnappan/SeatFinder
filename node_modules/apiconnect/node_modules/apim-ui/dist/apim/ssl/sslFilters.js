/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2015, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

/* Filters */

var sslProfiles = angular.module('apim.tls');

sslProfiles.filter('getClusterNameFromUrl', function() {
  return function (url, clusters) {
    if(!url) return "";
    for(var i=0; i<clusters.length; i++) {
      if(clusters[i].url.indexOf(url) >= 0) {
        return clusters[i].name;
      }
    }
    return url;
  };
});

sslProfiles.filter('environmentName', function() {
  return function(envId, environments) {
    if (!environments) return "";
    var filtered = environments.filter(function(environment) {
      return (environment.id == envId);
    });
    if (filtered.length > 0) return filtered[0].name;
    return "";
  };
});

sslProfiles.filter('createRoleTag', function() {
  return function (id, roles) {
    if(!id) return null;
    for(var i=0; i<roles.length; i++) {
      if(roles[i].id == id) {
        return {
          "value": roles[i].id,
          "label": roles[i].displayName,
          "className": "orgTag"
        };
      }
    }
    return null;
  };
});

sslProfiles.filter('roleNotAlreadySelected', function() {
  return function (roles, selectedRoleIds) {
    if(!selectedRoleIds) return roles;
    var filteredRoles = roles.filter(function(role) {
      for(var i=0; i<selectedRoleIds.length; i++) {
        if(role.id == selectedRoleIds[i]) return false;
      }
      return true;
    });
    return filteredRoles;
  };
});

sslProfiles.filter('policiesQuery', function() {
  return function (policies, query) {
    if(!policies) return policies;
    if(!query) return policies;
    var term = query.toLowerCase();
    return policies.filter(function(policy) {
      return (policy.title && policy.title.toLowerCase().indexOf(term) > -1) ||
        (policy.version && policy.version.toLowerCase().indexOf(term) > -1);
    });
  };
});

sslProfiles.filter('reverseDate', function() {
  return function (dateString) {
    if(!dateString) return;
    var year = dateString.substr(0,4);
    var remainder = dateString.substr(5);
    var ret = remainder + ", " + year;
    return ret;
  };
});

