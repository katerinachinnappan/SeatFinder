/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

var apimAnalytics = angular.module('apim.analytics',['ngResource']);

apimAnalytics.controller('AnalyticsController', ['$scope', '$rootScope', '$sce', '$stateParams', 'CurrentUser', '$window', AnalyticsController]);
function AnalyticsController($scope, $rootScope, $sce, $stateParams, CurrentUser, $window) {

  var ANALYTICS_VIEW_PERMISSION = '/catalog_environmentAnalytics/view';
  var ANALYTICS_MANAGE_PERMISSION = '/catalog_environmentAnalytics/manage';
  var ANALYTICS_SPACE_MANAGE_PERMISSION = '/space_spaceAnalytics/manage';
  var ANALYTICS_SPACE_VIEW_PERMISSION = '/space_spaceAnalytics/view';

  $scope.envLoaded = false;
  $scope.envChecked = false;
  $scope.$watch('currentOrg', function () {
    if (!$scope.currentOrg) return;
    $scope.$watch('environments', function () {
      if (!$scope.environments) return;
      var hashArray = window.location.hash.split("/");
      var envId = hashArray[2];
      if (!$scope.environment || $scope.environment.id != envId) {
        var filtered = $scope.environments.filter(function (env) {
          return env.id == envId;
        });
        if (filtered.length > 0) {
          $scope.setEnvironment(filtered[0]);
          $scope.envLoaded = true;
        }
      } else {
        $scope.envLoaded = true;
      }
      $scope.envChecked = true;
      if ($scope.environment) {
        $scope.catalogName = $scope.environment.name;
        // we must make a benign XHR call before setting the IFrame URL so that we can intercept
        // the case of an expired session cookie.
          CurrentUser.query().$promise.then(function() {
            $scope.loadIframe();
          }, function(err) {
            // anything that goes wrong will be in the standard error dialog
          });
      }
    });
  });

  $window.addEventListener('message', function(event) {
    var loc = document.location;
    if (event.origin != loc.protocol + '//' + loc.host) return;

    var analyticsIFrame = document.getElementById('analyticsIframe');
    if (analyticsIFrame) {
      analyticsIFrame.style.height = event.data.h + "px";
    }
  });

  $scope.catalogSearchId = $stateParams.id;

  $scope.currentDashboard = 'catalog_default';

  $scope.loadIframe = function () {
    var managepermission = false;
    // check if we have manage permission
    if ($rootScope.permissions) {
      managepermission = $rootScope.permissions.hasOwnProperty($scope.environment.id + ANALYTICS_MANAGE_PERMISSION);
      if ($scope.spaceId && $scope.spaceId.length > 0) {
        managepermission = $rootScope.permissions.hasOwnProperty($scope.spaceId + ANALYTICS_SPACE_MANAGE_PERMISSION);
      }
    }

    var readonly = managepermission ? '' : '&embed&readonly';
    var filter = '';

    // &_a=(filters:!((meta:(key:api_id,value:livequote),query:(match:(api_id:(query:livequote,type:phrase))))))
    if ($stateParams.type && $stateParams.type === 'api') {
      $scope.currentDashboard = 'api_default';
      filter = '&_a=(filters:!((\'$state\':(store:appState),meta:(index:\'apim-' +
        $scope.orgId +
        '*\',key:api_name,value:\'' +
        $stateParams.name +
        '\'),query:(match:(api_name:(query:\'' +
          $stateParams.name +
          '\',type:phrase))))))';
    }

    if ($stateParams.type && $stateParams.type === 'product') {
      $scope.currentDashboard = 'product_default';
      filter = '&_a=(filters:!((\'$state\':(store:appState),meta:(index:\'apim-' +
        $scope.orgId +
        '*\',key:product_name,value:\'' +
        $stateParams.name +
        '\'),query:(match:(product_name:(query:\'' +
          $stateParams.name +
          '\',type:phrase))))))';
    }

    // &_a=(filters:!(('$state':(store:appState),meta:(index:'apim-xxx*',key:api_name,value:'!'Surfboards'),query:(match:(api_name:(query:'Surfboards,type:phrase)))),('$state':(store:appState),meta:(alias:!n,disabled:!f,index:graeme,key:api_version,negate:!f,value:'1'),query:(match:(api_version:(query:1,type:phrase))))))
    if ($stateParams.type && $stateParams.type === 'plan') {
      $scope.currentDashboard = 'plan_default';
      var planComponents = $stateParams.id.split(':');
      filter = '&_a=(filters:!((\'$state\':(store:appState),meta:(index:\'apim-' +
        $scope.orgId +
        '*\',key:product_name,value:\'' +
        planComponents[0] +
        '\'),query:(match:(product_name:(query:\'' +
          planComponents[0] +
          '\',type:phrase)))),(\'$state\':(store:appState),meta:(index:\'apim-' +
            $scope.orgId +
            '*\',key:plan_name,value:\'' +
            planComponents[2] +
            '\'),query:(match:(plan_name:(query:\'' +
              planComponents[2] +
              '\',type:phrase))))))';
    }

    var spaceString = '';
    if ($scope.spaceId && $scope.spaceId.length > 0) {
      spaceString = 'spaceId:\'' + $scope.spaceId + '\',';
      if ($scope.spaceName) {
        spaceString += 'spaceName:\'' + $scope.spaceName + '\',';
      }
    }

    var basePath = "";
    if ($scope.features.kibanav5) {
      basePath = "/apim/proxy/kibana/apim-kibana#/dashboard/";
    } else {
      basePath = "/apim/proxy/kibana/app/kibana#/dashboard/";
    }

    var SPECIAL_CHAR_REGEX = /[!']/g;
    var removeSpecialCharacter = function (input){
      return encodeURIComponent(input).replace(SPECIAL_CHAR_REGEX,'');
    }

    $scope.analyticsUrl = $sce.trustAsResourceUrl(basePath + $scope.currentDashboard +
      '?_g=(time:(from:now-4h,mode:quick,to:now),' +
        'orgId:\'' + $scope.orgId + '\',' +
        'catalogId:\'' + $scope.environment.id + '\',' +
        spaceString +
        'catalogName:\'' + removeSpecialCharacter($scope.environment.name) + '\'' +
        (($stateParams.type && $stateParams.type === 'api') ? ',apiName:\'' + removeSpecialCharacter($stateParams.name) + '\'' : '') +
        (($stateParams.type && $stateParams.type === 'product') ? ',productName:\'' + removeSpecialCharacter($stateParams.name) + '\'' : '') +
        (($stateParams.type && $stateParams.type === 'plan') ? ',planId:\'' + removeSpecialCharacter($stateParams.id) + '\'' : '') +
        ')' + filter + readonly);
  }
}

apimAnalytics.directive('iframe', [iframe]);
function iframe() {
  return {
    restrict: 'E',
    link: function (scope, element) {
      element.data('$scope', scope);
    }
  };
}
