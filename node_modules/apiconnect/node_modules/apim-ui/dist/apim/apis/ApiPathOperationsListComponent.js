/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2015, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

angular.module('apim.apis').component('apiPathOperationsList', {
  bindings: {
    path: '<',
    pathSet: '<'
  },
  require: {
    pathCtrl: '^apiPath'
  },
  templateUrl: 'apim/apis/partials/api-path-operations-list.html',
  controller: function($filter, $scope, $modal) {
    var $ctrl = this;

    this.$onInit = function() {
      $ctrl.features = this.pathCtrl.features || {};
      $ctrl.xIbmConfig = this.pathCtrl.xIbmConfig;
      $ctrl.addOperationDropdownOpen = false;
      $ctrl.operations = [];
      populateOperationsArray();
      $ctrl.tagArray = [];

      if (this.pathCtrl.apiTags) {
        this.pathCtrl.apiTags.forEach(function(tag) {
          $ctrl.tagArray.push(tag.name);
        });
      }
    };

    function populateOperationsArray() {
      for (var operation in $ctrl.path) {
        if (typeof $ctrl.path[operation] !== 'object') continue;
        if (operation == 'parameters') continue;
        var transformedDefn = $ctrl.path[operation];
        transformedDefn['$$key'] = operation;
        $ctrl.operations.push(transformedDefn);
      }
    }

    this.addOperation = function(method) {
      $ctrl.path[method] = {
        responses: {
          200: {
            description: '200 OK'
          }
        }
      };
      var transformedOperation = $ctrl.path[method];
      transformedOperation['$$key'] = method;
      $ctrl.operations.push(transformedOperation);
    };

    this.deleteOperation = function(operation) {
      var scope = $scope.$new();

      scope.confirmation = {
        titleKey: 'api_operation_delete_title',
        messageKey: 'api_operation_delete_message',
        confirmed: function() {
          delete $ctrl.path[operation.$$key];

          for (var i = 0; i < $ctrl.operations.length; i++) {
            if ($ctrl.operations[i].$$key == operation.$$key) {
              $ctrl.operations.splice(i, 1);
              break;
            }
          }
        },
        rejected: function() {}
      };

      $modal.open({
        templateUrl: 'apim/partials/confirmation.html',
        windowTemplateUrl: 'apim/partials/main-template.html',
        controller: 'ConfirmationController',
        size: 'sm',
        scope: scope
      });

    };
  }
});
