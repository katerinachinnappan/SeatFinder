/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-policies


var Promise = require('bluebird');
var g = require('strong-globalize')();
var logger = require('apiconnect-cli-logger');

module.exports.listFormat = function(subscriptions, options) {
  switch (options.scope) {
    case 'catalog':
    case 'consumer-org':
      subscriptions.forEach(function(subscription) {
        logger.writeln(g.f('%s in %s for %s:%s:%s in %s:%s',
          subscription.name,
          subscription.application.appName,
          subscription.product.name,
          subscription.product.version,
          subscription.plan.name,
          options.organization,
          options.catalog));
      });
      break;
    case 'space':
      subscriptions.forEach(function(subscription) {
        logger.writeln(g.f('%s in %s for %s:%s:%s in %s:%s:%s',
          subscription.name,
          subscription.application.appName,
          subscription.product.name,
          subscription.product.version,
          subscription.plan.name,
          options.organization,
          options.catalog,
          subscription.spaces[0].name
        ));
      });
      break;
    default:
      var err = new Error(g.f('Invalid scope %s, valid scopes are "catalog", "space" and "consumer-org"',
        options.scope));
      err.code = 'INVALID_SCOPE';
      return Promise.reject(err);
  }
};

module.exports.getFormat = function(subscriptions, options) {
  logger.writeln(g.f('name: %s', subscriptions.name));
  logger.writeln(g.f('app: %s', subscriptions.application.appName));
  logger.writeln(g.f('product: %s', subscriptions.product.name));
  if (subscriptions.spaces && subscriptions.spaces.length > 0) {
    logger.writeln(g.f('space: %s', subscriptions.spaces[0].name));
  }
  logger.writeln(g.f('catalog: %s', options.catalog));
  logger.writeln(g.f('organization: %s', options.organization));
};

