/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-assembly

'use strict';

angular.module('apiconnect-assembly-localization', [
]).config(['$translateProvider', function ($translateProvider) {
  $translateProvider.useSanitizeValueStrategy('escaped');
  var enBundle = {
    "assemblySaving": "Saving assembly...",
    "assemblySaved": "Assembly saved",
    "assembly-move-panel": "Toggle info panel between right and bottom",
    "assembliesNoAssembliesFound": "No assemblies found.",
    "assembliesNoMatchingAssemblies": "There are no assemblies that match the chosen filters.",
    "assembly_empty_schema": "There are no properties to configure for this policy",
    "assembly_otherwise": "otherwise",
    "assembly_title": "Title",
    "assembly_filter_policies": "Filter policies",
    "assembly_policies_filter_micro": "Micro Gateway policies",
    "assembly_policies_filter_dp": "DataPower Gateway policies",
    "assembly_node_gateway_mismatch": "This policy is not available on the selected gateway",
    "assemblies_search": "Search assemblies",
    "assemblyLastModified": "Last modified",
    "assemblyCreateProduct": "Create and publish",
    "assemblyRefreshProducts": "Refresh products",
    "assemblyRepublishProduct": "Republish product",
    "assemblySubscribeApp": "Subscribe",
    "assemblyCreateAndSubscribeApp": "Create and subscribe",
    "assemblyAppName": "App name",
    "assemblyPlanName": "Plan name",
    "assemblyCondition": "Condition",
    "assemblerMapperConfigureTarget": "Configure mapping",
    "assemblerMapperIterate": "Iterate?",
    "assemblerMapperIterateOn": "Iterate on",
    "assemblerMapperOutputArray": "Output array",
    "assemblerMapperInputArray": "iterate over",
    "assemblerMapperIterateOutput": "The output of this mapping is within an array and it's contents will be created by iterating over the chosen input. If the chosen input isn't an array, an array of length 1 will be produced.",
    "assemblerMapperIterateDescription": "Some inputs are arrays, or contained within arrays. To iterate over the contents, choose the iterate option and choose the input over which to iterate.",
    "assemblerMapperInputSchema": "Source schema",
    "assemblerMapperMappedFrom": "Mapped from: ",
    "assemblerMapperOutputSchema": "Target schema",
    "assemblerMapperTargetDescription": "Property {{target}} is currently mapped to {{from}} - the mapping can be removed below.",
    "assemblerMapperTargetNoMapDescription": "Property {{target}} can be assigned a static value by entering it below.",
    "assemblerMapperValue": "Value",
    "assemblerMapperDefault": "Default",
    "assemblerMapperEmptyString": "Empty string as default value",
    "assemblerMapperValueDescription": "A simple JavaScript expression which resolves to the value of the output. This could be a static string ('my static string'), or an expression involving any mapped inputs ($(input.firstName) + ' ' + $(input.lastName))",
    "assemblerMapperDefaultDescription": "A default value which will be used if the inputs to the map are not defined.",
    "assemblyMapSource": "Input",
    "assemblyEditInputs": "Edit inputs",
    "assemblyMapTransformation": "Map",
    "assemblyMapTarget": "Output",
    "assemblyEditOutputs": "Edit outputs",
    "assemblyRefresh": "Refresh",
    "assembly-create-assembly": "Create assembly",
    "assembly-no-assembly": "This API does not yet contain an assembly. Would you like to create one?",
    "assemblySearchErrors": "search errors...",
    "assemblySearchOperations": "search operations...",
    "assemblyFilterOperations": "Select operation...",
    "assemblyFilterOperationsLabel": "Filter by operation",
    "assemblyClearFilterOperationsLabel": "Clear operation filter",
    "assemblySearchDefinitions": "search definitions...",
    "assemblyZoomLabel": "Zoom in and out",
    "assemblyShowCatches": "Show catches",
    "assemblyCase": "case",
    "assemblyCatch": "catch",
    "assemblyEmptyCase": "empty case",
    "assemblyEmptyCatch": "empty catch",
    "assemblyActivityLogContent": "Content",
    "assemblyActivityLogErrorContent": "Error content",
    "assemblyAddCase": "+ Case",
    "assemblyAddCaseTitle": "Add case",
    "assemblyAddCatch": "+ Catch",
    "assemblyAddCatchDefault": "+ Default",
    "assemblyAddCatchTitle": "Add catch",
    "assemblyAddCatchDefaultTitle": "Add default catch",
    "assemblyAddOtherwise": "+ Otherwise",
    "assemblyOtherwise": "otherwise",
    "assemblyRemoveAction": "Remove",
    "assemblyAddAction": "+ Action",
    "assemblyAction": "Action",
    "assemblyRemoveActionTitle": "Remove action",
    "assemblyAddActionTitle": "Add action",
    "assemblyRedactPath": "Path",
    "assemblyRedactRemove": "Remove",
    "assemblyRedactRedact": "Redact",
    "assemblyRedactFrom": "+ redact from...",
    "assemblyRedactAll": "or redact from all",
    "assemblyRemoveCase": "Remove case",
    "assemblyRemoveCatch": "Remove catch",
    "assemblyMoveUp": "Move up",
    "assemblyMoveDown": "Move down",
    "assemblyPinMenu": "Pin menu",
    "assemblyMaximize": "Maximize / minimize",
    "assemblyJumpToSource": "Jump to source",
    "assemblyTitle": "Title",
    "assemblyDescription": "Description",
    "assemblyExpression": "Condition",
    "assemblyConvertToExpression": "Convert to expression",
    "assemblyLaunchExpressionEditor": "edit condition",
    "assemblyOr": "or",
    "assemblyExpressionEditor": "Condition editor",
    "assemblyDefinition": "Definition",
    "assemblyActionValue": "Value",
    "assemblyActionAdd": "Add",
    "assemblyActionSet": "Set",
    "assemblyActionClear": "Clear",
    "assemblyFitToScreen": "Fit to screen",
    "assemblyZoomIn": "Zoom in",
    "assemblyZoomOut": "Zoom out",
    "assemblyPrevious": "Previous",
    "assemblyNext": "Next",
    "assemblyDone": "Done",
    "assemblyCloseInfo": "Close",
    "assemblyInvoke": "Invoke",
    "assemblyTest": "Test",
    "assemblyTestIdentification": "Identification",
    "assemblyTestAuthorization": "Authorization",
    "assemblyTestAuthorize": "Authorize",
    "assemblyTestRefreshToken": "Refresh token",
    "assemblyTestForgetToken": "Forget token",
    "assemblyTestBasicAuth": "This operation is secured with basic authentication",
    "assemblyTestOauthPassword": "This operation is secured with password flow OAuth",
    "assemblyTestOauthImplicit": "This operation is secured with implicit flow OAuth",
    "assemblyTestOauthAccessCode": "This operation is secured with access code flow OAuth",
    "assemblyTestOauthApplication": "This operation is secured with application flow OAuth",
    "assemblyTestOauthTokenStorage": "The token will not be stored in either a cookie or local storage. If you close the test panel, the token will be lost but may still be valid.",
    "assemblyAppSecret": "Please take note of the client ID and secret for this new application. Store the secret somewhere safe as it cannot be retrieved again, although it can be reset if required:",
    "assemblyTestUsername": "Username",
    "assemblyTestPassword": "Password",
    "assemblyBackToTest": "Back to test",
    "assemblyTestSetup": "Setup",
    "assemblyTestResponse": "Response",
    "assemblyTestResponseCode": "Status code",
    "assemblyTestResponseBody": "Body",
    "assemblyTestResponseTime": "Response time",
    "assemblyTestCallCounter": "Counter",
    "assemblyTestTotalTime": "Total time",
    "assemblyTestAverageTime": "Average time",
    "assemblyTestHeaders": "Headers",
    "assemblyTestDebug": "Debug",
    "assemblyNoDebugData": "No debug data was found for this API call",
    "assemblyApiUnpublishedChanges": "The API may have unpublished changes. Would you like to republish the product?",
    "assemblyApiUnsavedChanges": "The API has unsaved changes.",
    "assemblyApiSaveRepublish": "Save and republish",
    "assemblyTestCatalogDesc": "Choose a catalog to test within:",
    "assemblyTestProductDesc": "Choose a product containing this API, or create a new one:",
    "assemblyTestProductExisting": "Choose an existing product",
    "assemblyTestProductCreate": "Or create a new product and publish it to the selected catalog",
    "assemblyTestProductDoesntContainApi": "The selected product does not contain this API",
    "assemblyTestProductNotPublished": " The selected product is not published to the selected catalog, so it is not possible to subscribe the application",
    "assemblyTestProductAddApi": "Add API",
    "assemblyTestPlanDesc": "Choose a plan against which to test:",
    "assemblyTestAppDesc": "Choose an application with which to test, or create a new one:",
    "assemblyTestAppExisting": "Choose an existing application",
    "assemblyTestAppCreate": "Or create a new application and subscribe to the selected plan",
    "assemblyTestChooseOperation": "Choose an operation to invoke:",
    "assemblyTestRepeat": "Repeat",
    "assemblyTestRepeatDesc": "Repeat the API invocation a set number of times, or until the stop button is clicked",
    "assemblyTestRepeatFor": "Stop after:",
    "assemblyTestStopOnError": "Stop on error",
    "assembly_test_minus_one_response": "No response received. Causes include a lack of CORS support on the target server, the server being unavailable, or an untrusted certificate being encountered.",
    "assemblyStopInvoke": "Stop",
    "assemblyShowSchema": "Show schema",
    "assemblyGenerateData": "Generate",
    "assemblyChangeSetup": "Change setup",
    "assemblyGenerateDefaultObject": "Generate an object",
    "assemblyAverageResponseTime": "Average response time: {{value}}ms",
    "assemblyResponseTime": "Response time: {{value}}ms",
    "assemblyContextVariable": "Context variable",
    "assemblyAddInputTitle": "+ input",
    "assemblyAddParametersTitle": "+ parameters for operation...",
    "assemblyAddOutputsTitle": "+ outputs for operation...",
    "assemblyAddOutputTitle": "+ output",
    "assemblyRemoveInput": "Remove input",
    "assemblyRemoveOutput": "Remove output",
    "assemblyRemoveMappingTitle": "Remove mapping",
    "assemblyRemoveStaticValueTitle": "Remove static value",
    "assemblyOtherOperationsSingular": "This policy is used by one other operation",
    "assemblyOtherOperationsPlural": "This policy is used by {{count}} other operations",
    "assemblyShowPalette": "Show / hide policy palette",
    "assemblyInvokeTargetURL": "Target URL",
    "assemblyInvokeTLSProfile": "TLS profile",
    "assemblyInvokeTimeout": "Timeout",
    "assemblyInvokeUsername": "Username",
    "assemblyInvokePassword": "Password",
    "assemblyInvokeVerb": "HTTP Method",
    "assemblyInvokeCompression": "Compression",
    "assemblyInvokeCacheResponse": "Cache Type",
    "assemblyInvokeCacheTTL": "Cache Time-To-Live",
    "assemblyInvokeCacheKey": "Cache Key",
    "assemblyInvokeOutput": "Output variable",
    "assemblyTransformXSLTInput": "Use context current payload",
    "assemblyJ2XRootElementName": "Root XML Element Name",
    "assemblyJ2XAlwayOutputRoot": "Always output the root element.",
    "assemblyVerbGet": "GET",
    "assemblyVerbPost": "POST",
    "assemblyVerbPut": "PUT",
    "assemblyVerbDelete": "DELETE",
    "assemblyVerbPatch": "PATCH",
    "assemblyVerbHead": "HEAD",
    "assemblyVerbOptions": "OPTIONS",
    "assemblyVerbRequest": "Keep",
    "assemblyCacheNone": "Protocol",
    "assemblyCacheNoCache": "No Cache",
    "assemblyCacheTimeToLive": "Time to Live",
    "assemblyDefineInputs": "Define the inputs to be used in the map. You can also assign a title and description to the map.",
    "assemblyDefineOutputs": "Define the outputs to be used in the map.",
    "assembly_delete_node_tooltip": "Delete",
    "assembly_clone_node_tooltip": "Clone",
    "assembly_build_node_tooltip": "Implement policy",
    "assembly_delete_node_title": "Deleting {{name}}...",
    "assembly_delete_node_description": "Are you sure you want to delete this policy?",
    "assembly_inline_definition": "Inline schema",
    "assembly_load_wsdl": "Load schema from WSDL",
    "assembly_edit_inline_definition": "Edit inline schema",
    "assembly_inline_enter_yaml": "Enter YAML or",
    "assembly_inline_as_yaml" : "switch to JSON",
    "assembly_inline_enter_json": "Enter JSON or",
    "assembly_inline_as_json" : "switch to YAML",
    "assembly_inline_schema": "Provide a schema",
    "assembly_templates": "Web service operations",
    "assembly_add_property": "add property...",
    "assembly_add_item": "add item...",
    "assembly_add_property_placeholder": "property",
    "assembly_add_item_placeholder": "item",
    "assemblyMapName": "Name",
    "assemblyContentType": "Content type",
    "assemblyContentTypeNone": "none",
    "assemblyPruneModelTitle": "Unrecognized Schema Element(s) Encountered",
    "assemblyPruneModelText": "The current mapping contains references to unrecognized schema elements.",
    "assemblyPruneModel": "Do you want to remove these references?",
    "assemblyCancel": "Ignore",
    "assemblyPrune": "Remove",
    "explorer_check_certificate": "Clicking the link below will open the server in a new tab. If the browser displays a certificate issue, you may choose to accept it and return here to test again.",
    "node_multiple_errors": "{{count}} errors need attention"
  };
  // var enBundle = __inline(nls/en.json);
  // var deBundle = __inline(nls/de.json);
  // var esBundle = __inline(nls/es.json);
  // var frBundle = __inline(nls/fr.json);
  // var itBundle = __inline(nls/it.json);
  // var jaBundle = __inline(nls/ja.json);
  // var koBundle = __inline(nls/ko.json);
  // var ptBRBundle = __inline(nls/pt_BR.json);
  // var trBundle = __inline(nls/tr.json);
  // var zhBundle = __inline(nls/zh.json);
  // var zhTWBundle = __inline(nls/zh_TW.json);
  $translateProvider.translations('en', enBundle);
  // $translateProvider.translations('de', deBundle);
  // $translateProvider.translations('es', esBundle);
  // $translateProvider.translations('fr', frBundle);
  // $translateProvider.translations('it', itBundle);
  // $translateProvider.translations('ja', jaBundle);
  // $translateProvider.translations('ko', koBundle);
  // $translateProvider.translations('pt_BR', ptBRBundle);
  // $translateProvider.translations('tr', trBundle);
  // $translateProvider.translations('zh', zhBundle);
  // $translateProvider.translations('zh_TW', zhTWBundle);
    $translateProvider.registerAvailableLanguageKeys(['en'/*, 'de', 'es', 'fr', 'it', 'ja', 'ko', 'pt_BR', 'tr', 'zh', 'zh_TW'*/], {
      "en_*": 'en'//,
      // "de_*": 'de',
      // "es_*": 'es',
      // "fr_*": 'fr',
      // "it_*": 'it',
      // "ja_*": 'ja',
      // "ko_*": 'ko',
      // "tr_*": 'tr',
      // "zh_CN": 'zh'
    });
    // use browser local list if it's available
    if (navigator.languages) {
      $translateProvider.determinePreferredLanguage();
    } else {
        if (typeof(localStorage) !== "undefined") {
          var userLocale = localStorage.getItem("apim-client-locale");
          // check if we've got the session locale in global var
          // supports browsers that dont have the new language list
            if (window['apimSessionLocale']) {
              var adjusted = window['apimSessionLocale'].split('-').join('_');
              localStorage.setItem("apim-client-locale", adjusted);
              userLocale = adjusted;
            }
            if (userLocale) {
              $translateProvider.preferredLanguage(userLocale);
            } else {
              $translateProvider.determinePreferredLanguage();
            }
        } else {
          // no local storage - probably private browsing, do the best we can instead
          $translateProvider.determinePreferredLanguage();
        }
    }
  $translateProvider.fallbackLanguage('en');
}]);;
