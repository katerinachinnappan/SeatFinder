/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
'use strict';

angular.module('apiconnect-assembly').controller('ErrorController', ['$scope', '$mdDialog', function ($scope, $mdDialog) {

  // Set some defaults
  var defaultErrorMessage = "An error has occurred",
    defaultErrorDescription = "An error occurred in the IBM App Connect flow editor.",
    defaultErrorLinkText = "Find the solution on the IBM App Connect forum",
    defaultErrorButtons = [{
      "buttonTitle" : "Close"
    }];
  $scope.errorCodeText = "Error Code";
  if (!$scope.errorObject) {
    $scope.errorObject = {};
  }

  // Populate our variables
  $scope.errorMessage = $scope.errorObject.errorMessage || defaultErrorMessage;
  $scope.errorCode = $scope.errorObject.errorCode;
  $scope.errorDescription = $scope.errorObject.errorDescription || defaultErrorDescription;
  $scope.errorLinkUrl = $scope.errorObject.errorLinkUrl;
  if ($scope.errorLinkUrl) {
    $scope.errorLinkText = $scope.errorObject.errorLinkText || defaultErrorLinkText;
  }
  $scope.errorButtons = (($scope.errorObject.errorButtons) && ($scope.errorObject.errorButtons.length > 0)) ? $scope.errorObject.errorButtons : defaultErrorButtons;
  $scope.dismissable = (typeof $scope.errorObject.dismissable !== 'undefined') ? $scope.errorObject.dismissable : true;
  $scope.closeCallback = $scope.errorObject.closeCallback;

  $scope.closeDialog = function (invokeCloseCallback) {
    $mdDialog.hide();
    if (invokeCloseCallback && $scope.closeCallback) {
      $scope.closeCallback();
    }
  };

  $scope.runCallback = function (callbackFunction, keepDialogOpen) {
    if (callbackFunction) {
      callbackFunction();
    }
    if (!keepDialogOpen) {
      $scope.closeDialog();
    }
  };
}]).controller('WarningController', ['$scope', '$timeout', function ($scope, $timeout) {

  // Set some defaults
  var defaultWarningMessage = "",
    defaultWarningButtons = [];
  if (!$scope.warningObject) {
    $scope.warningObject = {};
  }

  var countdownTimer;

  // Build warning Message with a counter
  if($scope.warningObject.warningMessage) {
    if($scope.warningObject.warningMessage.hasCounter &&
      ($scope.warningObject.warningMessage.count > 0) &&
      ($scope.warningObject.warningMessage.messages.length === 2)) {
      // Set count
      $scope.counter = $scope.warningObject.warningMessage.count;
      // Setup countdown message updates - countdown in seconds
      $scope.countdown = function() {
        // Set initial message
        $scope.warningMessage = $scope.warningObject.warningMessage.messages[0] + $scope.counter + $scope.warningObject.warningMessage.messages[1];
        countdownTimer = $timeout(function() {
          $scope.warningMessage = $scope.warningObject.warningMessage.messages[0] + $scope.counter + $scope.warningObject.warningMessage.messages[1];
          $scope.counter--;
          if($scope.counter >= 0){
            $scope.countdown();
          } else {
            $scope.closeDialog();
          }
        }, 1000);
      };
      // Start the timer
      $scope.countdown();
    } else {
      if($scope.warningObject.warningMessage.messages && ($scope.warningObject.warningMessage.messages.length === 1)) {
        $scope.warningMessage = $scope.warningObject.warningMessage.messages[0];
      } else {
        $scope.warningMessage = defaultWarningMessage;
      }
    }
  } else {
    $scope.warningMessage = defaultWarningMessage;
  }


  // Populate our variables
  $scope.warningButtons = (($scope.warningObject.warningButtons) && ($scope.warningObject.warningButtons.length > 0)) ? $scope.warningObject.warningButtons : defaultWarningButtons;
  $scope.closeCallback = $scope.warningObject.closeCallback;

  $scope.closeDialog = function () {
    $timeout.cancel(countdownTimer);
    if($scope.closeCallback) {
      $scope.closeCallback();
    }
    $scope.panelReference.close();
  };

  $scope.runCallback = function (callbackFunction, keepDialogOpen) {
    if (callbackFunction) {
      callbackFunction();
    }
    if (!keepDialogOpen) {
      $scope.closeDialog();
    }
  };
}]);

