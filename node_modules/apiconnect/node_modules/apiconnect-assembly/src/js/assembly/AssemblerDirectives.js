/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-assembly


'use strict';

angular.module('apiconnect-assembly').directive('apimAssemblyPolicy', function () {
  return {
    restrict: 'E',
    templateUrl: 'src/html/policy.html'
  };
}).directive('apimAssemblyTemplate', function () {
  return {
    restrict: 'E',
    templateUrl: 'src/html/template.html'
  };
}).directive('apimAssembler', function () {
  return {
    restrict: 'E',
    templateUrl: 'src/html/assembler.html',
    scope: {
      assemblerOptions: '@'
    },
    controller: 'AssemblerController',
    controllerAs: 'AssemblerController',
    bindToController: true
  };
}).directive('apimNode', ['RecursionHelper', function (RecursionHelper) {
  return {
    restrict: 'E',
    templateUrl: 'src/html/node.html',
    compile: function(element) {
      return RecursionHelper.compile(element);
    }
  };
}]).directive('apimLogicNode', ['RecursionHelper', function (RecursionHelper) {
  return {
    restrict: 'E',
    templateUrl: 'src/html/logic-node.html',
    compile: function(element) {
      return RecursionHelper.compile(element);
    }
  };
}]).directive('apimMapper', function() {
  return {
    restrict: 'E',
    templateUrl: 'src/html/mapper.html'
  };
}).directive('apimGenerator', function() {
  return {
    restrict: 'E',
    templateUrl: 'src/html/generator.html'
  };
}).directive('apimTestParameter', function() {
  return {
    restrict: 'E',
    templateUrl: 'src/html/test-parameter.html'
  };
}).directive('apimAssemblyTest', function() {
  return {
    restrict: 'E',
    templateUrl: 'src/html/assembly-test.html'
  };
}).directive('apimDraftAssembly', function() {
  return {
    restrict: 'E',
    templateUrl: 'src/html/draft-assembly.html'
  };
}).directive('apicConditionBuilder', function() {
  return {
    restrict: 'E',
    controller: "ConditionController as conditionController",
    templateUrl: 'src/html/condition-builder.html',
    scope: {
      condition: '='
    }
  };
}).directive('apicConditionExpression', function(RecursionHelper) {
  return {
    restrict: 'E',
    templateUrl: 'src/html/condition-expression.html',
    controller: "ConditionExpressionController as expressionController",
    scope: true,
    compile: function(element) {
      return RecursionHelper.compile(element);
    }
  };
}).directive('apicConditionExpressionLeft', function(RecursionHelper) {
  return {
    restrict: 'E',
    templateUrl: 'src/html/condition-expression.html',
    controller: "ConditionExpressionLeftController as expressionController",
    scope: true,
    compile: function(element) {
      return RecursionHelper.compile(element);
    }
  };
}).directive('apicConditionExpressionRight', function(RecursionHelper) {
  return {
    restrict: 'E',
    templateUrl: 'src/html/condition-expression.html',
    controller: "ConditionExpressionRightController as expressionController",
    scope: true,
    compile: function(element) {
      return RecursionHelper.compile(element);
    }
  };
}).directive('apimNotEmpty', function() {
  return {
    restrict: 'A',
    require: 'ngModel',
    link: function (scope, elem, attrs, ctrl) {
      ctrl.$parsers.push(function(viewValue) {
        if(viewValue === "") {
          return null;
        }
        return viewValue;
      });
    }
  };
}).directive('appCTrigger', function () {
  return {
    controller: 'TriggerController as triggerController',
    restrict: 'E',
    templateUrl: '/app/nodeTemplates/trigger.html'
  };
}).directive('apimSidenav', function () {
  return {
    controller: 'SidenavController',
    restrict: 'E',
    templateUrl: 'src/html/sidenav.html'
  };
}).directive('errorDialog', function () {
  return {
    controller: 'ErrorController',
    restrict: 'E',
    templateUrl: 'src/html/error-dialog.html'
  };
}).directive('warningDialog', function () {
  return {
    controller: 'WarningController',
    restrict: 'E',
    templateUrl: 'src/html/warning-dialog.html'
  };
}).directive('policyList', function () {
  return {
    controller: 'PolicyListController',
    restrict: 'E',
    templateUrl: 'src/html/policy-list.html'
  };
}).directive('navigationBar', function () {
  return {
    controller: 'NavigationBarController',
    restrict: 'E',
    templateUrl: 'src/html/navigation-bar.html'
  };
}).directive('assemblerCanvas', function () {
  return {
    restrict: 'E',
    templateUrl: 'src/html/assembler-canvas.html'
  };
}).directive('nodeGroup', function () {
  return {
    restrict: 'E',
    templateUrl: 'src/html/node-group.html'
  };
});
