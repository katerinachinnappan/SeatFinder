/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-apim-client

'use strict';

var helper = require('apiconnect-cli-test-support');
var nock = require('nock');
var path = require('path');
var tap = require('tap');

var apimStacker = helper.apimStacker;
var conf = helper.config;
var moduleRoot = path.resolve(__dirname, '..');

function startMockServer(server, organization, catalog, space, app) {
  nock('https://' + server)
    .get('/v1/orgs/' + organization + '/environments/' + catalog + '/spaces/' + space
      + '/consumerApps?consumerAppsOnly=true')
    .reply(200, [ require(__dirname + '/data/list-space.json') ])
    .get('/v1/orgs/' + organization + '/environments/' + catalog + '/spaces/' + space + '/consumerApps/' + app)
    .reply(200, require(__dirname + '/data/get-space.json'));
};
apimStacker(function(releaseApimStack, resetApimStack, skipApimAccess) {

  if (!skipApimAccess && process.env.APIM_MANAGEMENT) {
    resetApimStack().then(function() {

      var apic = helper.apic(moduleRoot);
      var auth = helper.auth(apic);
      var logger = helper.logger;
      var test = tap.test;

      test('setup', function(t) {
        return auth.login();
      });

      test('devapps:list', function(t) {
        logger.clear();
        return apic('devapps:list -o climbon -c sb -s ' + conf.getServer())
          .then(function() {
            var output = logger.values();
            t.equals(output[0], 'National Park Guide in consumerorg');
          });
      });

      test('devapps:get', function(t) {
        logger.clear();
        return apic('devapps:get "National Park Guide" -o climbon -c sb -s ' + conf.getServer())
          .then(function() {
            var output = logger.values();
            t.ok('ha');
            t.match(output[0], 'name: ');
            t.equals(output[1], 'display name: National Park Guide');
            t.equals(output[2], 'description: ');
            t.match(output[3], 'client id: ');
            t.equals(output[4], 'consumer org name: consumerorg');
          });
      });

      test('devapps:list with --space', function(t) {
        startMockServer(conf.getServer(), 'climbon', 'prodspace', 's1');
        logger.clear();
        return apic('devapps:list --scope space --space s1 -o climbon -c prodspace -s '
          + conf.getServer())
          .then(function() {
            var output = logger.values();
            t.equals(output[0], 'flights in flightsOrg');
          });
      });

      test('devapps:get with --space', function(t) {
        startMockServer(conf.getServer(), 'climbon', 'prodspace', 's1', 'flightsApp');
        logger.clear();
        return apic('devapps:get "flightsApp" --scope space --space s1 -o climbon -c '
          + 'prodspace -s ' + conf.getServer())
          .then(function() {
            var output = logger.values();
            t.equals(output[0], 'name: flightsApp');
            t.equals(output[1], 'display name: flights');
            t.equals(output[2], 'description: Flights organization');
            t.equals(output[3], 'client id: fafe1404-9099-47c3-aa82-0f15a403f01f');
            t.equals(output[4], 'consumer org name: flightsOrg');
          });
      });

      test('cleanup', function(t) {
        releaseApimStack();
        t.end();
      });

    });
  }
});

