/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-explore

'use strict';

var jsyaml = require('js-yaml');
var fs = require('fs');
var SG = require('strong-globalize');
var projectInspector = require('apiconnect-project');
SG.SetRootDir(__dirname);

var Promise = require('bluebird');
var g = SG();

function getProjectArtifacts() {
  var workspaceDir = process.env.WORKSPACE_DIR || process.cwd();
  return projectInspector.loadProject(workspaceDir);
};

exports.getTopics = function() {
  return [ {
    name: 'local',
    visible: false,
    commands: [ {
      command: 'explore [path...]',
      options: [
        { name: 'external', rune: 'e', type: 'boolean' },
      ],
      aliases: [ 'explore' ],
      helpInfo: function() {
        return g.f('apic_local_explore_help.txt');
      },
      action: function(paths, options) {
        var explore = Promise.promisify(require('apiconnect-explorer'));
        return new Promise(function(resolve, reject) {
          var apis = [];
          if (paths.length === 0) {
            getProjectArtifacts().then(function(artifacts) {
              artifacts.forEach(function(artifact) {
                if (artifact.data && artifact.data.swagger) {
                  apis.push(artifact.data);
                }
              });
              explore(apis, options);
            });
          } else {
            paths.forEach(function(thisPath) {
              var asYaml = fs.readFileSync(thisPath, 'utf8');
              apis.push(jsyaml.safeLoad(asYaml));
            });
            explore(apis, options);
          };
        });
      },
    } ],
  } ];
};

