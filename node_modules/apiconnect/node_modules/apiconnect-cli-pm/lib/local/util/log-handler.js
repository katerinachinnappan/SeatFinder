/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-pm

'use strict';

module.exports = LogHandler;

function LogHandler(service) {
  this._svc = service;
  this._tailing = false;
  this._scheduled = null;
  this._schedulePeriod = 5000;
  this.serviceName = service.name;
};

LogHandler.prototype.scheduled = function() {
  return this._scheduled ? true : false; // eslint-disable-line no-unneeded-ternary
};

LogHandler.prototype.stopTailing = function() {
  if (this._scheduled) {
    var sch = this._scheduled;
    this._scheduled = null;
    clearTimeout(sch);
  }
};

LogHandler.prototype.tail = function(logListener) {
  this._tailing = true;
  return tail(this, logListener);

  function tail(handler, ll) {
    handler._scheduled = false;
    handler.get(ll);
    if (handler._tailing === true) {
      handler._scheduled = setTimeout(tail.bind(null, handler, ll), handler._schedulePeriod);
    }
    return;
  }
};

LogHandler.prototype.get = function(cb) {
  var self = this;
  var found = false;
  self._svc.logDump(function(err, responses) {
    if (err) {
      return cb(err); // TODO?
    }

    for (var i in responses) {
      if (!responses.hasOwnProperty(i)) {
        continue;
      }

      if (responses[i].error) {
        return cb(responses[i].error);
      }

      var rsp = responses[i].response;
      if (rsp.message && rsp.mesage !== '') {
        found = true;
        cb(null, rsp.message);
      } else if (rsp.log !== '') {
        found = true;
        cb(null, rsp.log);
      }
    }
    if (self._tailing === false && found === false) {
      cb(null, 'No logs available.');
    }
    return;
  });
};

