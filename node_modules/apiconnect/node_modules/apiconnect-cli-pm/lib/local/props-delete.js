/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-pm

'use strict';

var Promise = require('bluebird');
var errors = require('./util/errors');
var names = require('./util/name-helper');

module.exports = deleteProps;

function deleteProps(name, otherNames, options) {
  otherNames = otherNames || [];
  options = options || {};
  var propNames = otherNames;
  if (name) {
    propNames.unshift(name);
  }
  var props = {};
  propNames.forEach(function(k) {
    props[k] = '';
  });

  var namesPromise = Promise.resolve(options.service);
  if (!options.service) {
    namesPromise = names(null, true);
  }

  var client = require('./util/client').init(options);
  var filter = require('./util/props-filter').filter;

  return namesPromise.then(function(serviceName) {
    if (!serviceName) {
      throw errors.nonProjectDir('apic props:delete');
    }
    return client.getService(serviceName);
  }).then(function(service) {
    var filtered = filter(props);
    // keys with null values get deleted when passed to setEnvsAsync
    // we also want keys:values for consistent output
    var full = {};
    Object.keys(filtered).forEach(function(k) {
      if (service.env[k]) {
        full[k] = service.env[k];
      }
    });
    return service.setEnvsAsync(filtered)
      .then(function() {
        service.refreshAsync();
      }).return({ app: service.name, props: full });
  });
}

