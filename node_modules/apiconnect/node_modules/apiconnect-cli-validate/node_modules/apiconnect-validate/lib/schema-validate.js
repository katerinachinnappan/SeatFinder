'use strict';

var Promise = require('bluebird');
var debug = require('debug')('apiconnect-validate:lib:schema-validate');
var f = require('util').format;
var tv4 = require('tv4');
var getErrorStatus = require('./error-status');

module.exports = function schemaValidate(definition, schema, definitionType, filename) {
    var errors = [];
    // Working around a bug in tv4 where local refs don't resolve.
    // https://github.com/geraintluff/tv4/issues/235
    tv4.addSchema(schema.content);
    if (schema.section && definition[schema.section]) {
        // we have a section to validate, and content to validate
        errors = tv4.validateMultiple(definition[schema.section], schema.content).errors;
    } else if (!schema.section) {
        // we have no section to validate, default to the entire document
        errors = tv4.validateMultiple(definition, schema.content).errors;
    }
    tv4.dropSchemas();
    var name = 'unknown';
    var version = definition.info ? definition.info.version : 'unknown';
    if (definitionType === 'product') {
        name = definition.info && (definition.info.name || definition.info.title);
    } else if (definitionType === 'api') {
        name = definition.info && (definition.info['x-ibm-name'] || definition.info.title);
    } else if (definitionType === 'extension-instance') {
        if (schema.content.info) {
            name = schema.content.info.name;
            version = schema.content.info.version;
        }
    } else {
        debug(f('Unexpected definitionType => %s', definitionType));
    }

    return Promise.resolve({
        title: schema.name,
        name: name,
        version: version,
        path: filename,
        error: errors,
        type: definitionType,
        status: getErrorStatus(errors)
    });
};
