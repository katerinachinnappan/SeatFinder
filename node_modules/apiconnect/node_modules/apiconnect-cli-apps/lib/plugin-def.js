/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-apps

/*eslint brace-style: 0, max-len: 0*/

var g = require('strong-globalize')();

module.exports = {
  name: 'apps',
  version: require('../package.json').version,
  path: __filename,
  isBuiltin: true,
  topics: getTopics,
};

function getTopics() {
  return [ {
    name: 'apps',
    description: 'List the apps in organization',
    commands: [
      {
        command: 'list',
        loginRequired: 'org',
        aliases: [ 'apps' ],
        helpInfo: g.f('apic_apps_list_help.txt'),
        action: function(opts) {
          return require('./plugin-impl').appsListCmd(opts);
        },
        options: [
          { name: 'all-organizations', rune: 'O', type: 'boolean' },
          { name: 'organization', rune: 'o', default: '$APIC_CONFIG$.org.data.orgs' },
          { name: 'server', rune: 's', default: '$APIC_CONFIG$.org.host' },
        ],
      },
      {
        command: 'build',
        aliases: [ 'build' ],
        helpInfo: g.f('apic_apps_build_help.txt'),
        options: [
          { name: 'format', rune: 'f' },
          { name: 'no-install', rune: 'n', type: 'boolean' },
          { name: 'scripts', rune: 's', type: 'boolean' },
        ],
        action: function(opts) {
          return require('./plugin-impl').buildCmd(opts);
        },
      },
      {
        command: 'publish',
        loginRequired: 'app',
        action: function(options) {
          return require('./deploy').deployProject(options);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.app.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.app.host', required: true },
          { name: 'app', rune: 'a', type: 'name', default: '$APIC_CONFIG$.app.data.apps', required: true },
          { name: 'scale', type: 'number' },
          { name: 'project-dir', type: 'dir', mustExist: true },
        ],
        helpInfo: g.f('apic_apps_publish_help.txt'),
      },
      {
        command: 'set',
        loginRequired: 'app',
        action: function(options) {
          return require('./plugin-impl').appsSet(options);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.app.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.app.host', required: true },
          { name: 'app', rune: 'a', type: 'name', default: '$APIC_CONFIG$.app.data.apps', required: true },
          { name: 'status', type: 'status', required: true, validator: function(s) {
            s = s.toLowerCase();
            if (s !== 'online' && s !== 'offline') {
              throw new Error(g.f('The value of --status is invalid; it must be online or offline.'));
            }
          } },
        ],
        helpInfo: g.f('apic_apps_set_help.txt'),
      },
      {
        command: 'get',
        loginRequired: 'app',
        action: function(options) {
          return require('./plugin-impl').appsGet(options);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.app.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.app.host', required: true },
          { name: 'app', rune: 'a', type: 'name', default: '$APIC_CONFIG$.app.data.apps', required: true },
        ],
        helpInfo: g.f('apic_apps_get_help.txt'),
      },
    ],
  } ];
}

