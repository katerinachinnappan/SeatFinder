/** ******************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2018
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

'use strict';

const u = require('../lib/utils.js');
// var g = require('strong-globalize')();
var g = require('../lib/strong-globalize-fake.js');

/**
* Not used in production.  This code is used to create a single WSDL file that contains
* all of the schema files defined inline.
*/
function flatten(files, allWSDLs) {
    for (let j = 0; j < files.length; j++) {
        let file = files[j];
        if (file.type == 'xsd') {
            // Remove <?xml ../> and imports/includes from each xsd
            file.doc.xml2 = file.doc.xml;
            file.doc.xml2 = file.doc.xml2.replace(/<.*import [^>]*\/>/g, '');
            file.doc.xml2 = file.doc.xml2.replace(/<.*import [^>]*>[^<]*<\/.*import>/g, '');
            file.doc.xml2 = file.doc.xml2.replace(/<.*include [^>]*\/>/g, '');
            file.doc.xml2 = file.doc.xml2.replace(/<.*include [^>]*>[^<]*<\/.*include>/g, '');
            file.doc.xml2 = file.doc.xml2.replace(/<\?.*\?>/g, '');
        }
    }

    for (let j = 0; j < allWSDLs.length; j++) {
        var wsdlFile = allWSDLs[j];
        // Remove imports/includes from each wsdl
        wsdlFile.doc.flatXml = wsdlFile.doc.xml;
        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace(/<.*import [^>]*\/>/g, '');
        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace(/<.*import [^>]*>[^<]*<\/.*import>/g, '');
        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace(/<.*include [^>]*\/>/g, '');
        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace(/<.*include [^>]*>[^<]*<\/.*include>/g, '');

        // add each schema to the types section
        var schemas = wsdlFile.json.definitions.types.schema;
        var prefix = u.getPrefixForNamespace('http://schemas.xmlsoap.org/wsdl/', wsdlFile.namespaces);
        for (var k = 0; k < schemas.length; k++) {
            var schema = schemas[k];
            var targetNamespace = schema['undefined'].targetNamespace;
            for (var m = 0; m < files.length; m++) {
                if (files[m].type == 'xsd' && files[m].json.schema['undefined'].targetNamespace == targetNamespace) {
                    if (prefix != null) {
                        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace('<\/' + prefix + ':types>', files[m].doc.xml2 + '</' + prefix + ':types>');
                    } else {
                        wsdlFile.doc.flatXml = wsdlFile.doc.flatXml.replace(/<\/types>/, files[m].doc.xml2 + '</types>');
                    }
                }
            }
        }
    }
}

exports.flatten = flatten;
