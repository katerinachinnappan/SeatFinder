(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apim-ui

'use strict';

module.exports = angular.module('apic.uiSelectList', [
  'pascalprecht.translate',
  'ui.bootstrap'
]).component('apicSelectList', {
  bindings: {
    items: '<',
    itemType: '@',
    route: '@',
    filter: '=',
    disableDelete: '&',
    onDelete: '&'
  },
  template: require('./partials/selectAllList.html'),
  controller: function () {
    var $ctrl = this;

    this.$onChanges = function(changeSet) {
      $ctrl.selectedList = [];
      if (changeSet.items) {
        this.listItems = changeSet.items.currentValue;
        clearFilter();
      }
      if (changeSet.route) {
        this.router = changeSet.route.currentValue;
      }
    };

    this.$onInit = function() {
      this.listItems = this.items;
      this.listType = this.itemType;
      this.selectedList = [];
    };

    this.disableDeleteButton = function () {
      return Boolean(
        $ctrl.selectedList.length < 1 ||
        $ctrl.listItems.length < 1 ||
        $ctrl.disableDelete({items: $ctrl.selectedList})
      );
    };

    this.selectAllChecked = function() {
      return (
        $ctrl.selectedList.length === $ctrl.listItems.length &&
        $ctrl.listItems.length != 0
      );
    };

    this.isIndeterminate = function() {
      return (
        $ctrl.selectedList.length != 0 &&
        $ctrl.selectedList.length != $ctrl.listItems.length
      );
    };

    function selectItems (value) {
      $ctrl.listItems.forEach(function(item) {
        item.selected = value;
      });
      $ctrl.selectedList = value ? $ctrl.listItems : [];
    };

    this.toggleAllItems = function() {
      return selectItems($ctrl.listItems.length !== $ctrl.selectedList.length);
    };

    this.updateSelectedList = function() {
      $ctrl.selectedList = $ctrl.listItems.filter(function(item) {
        return item.selected;
      });
    };

    function clearFilter () {
      $ctrl.filter = '';
    };
  }
}).name;


},{"./partials/selectAllList.html":2}],2:[function(require,module,exports){
module.exports = '<div class="bx--responsive-table-container">\n  <table ng-show="!xhrProcessing" class="bx--responsive-table">\n    <thead class="bx--table-head">\n      <tr class="bx--table-row">\n        <th class="bx--table-header bxTablePaddingLeft" aria-label="name" style="width:100%">\n          <md-checkbox class="md-primary"\n            ng-checked="$ctrl.selectAllChecked()"\n            ng-click="$ctrl.toggleAllItems()" md-indeterminate="$ctrl.isIndeterminate()">\n            {{ \'name\' | translate }}\n          </md-checkbox>\n        </th>\n        <th class="bx--table-header" aria-label="type">{{ \'type\' | translate }}</th>\n        <th class="bx--table-header bxTablePaddingRight">\n          <button class="iconOnlyButton material-icons"\n            title="{{::\'delete\' | translate}}"\n            ng-disabled="$ctrl.disableDeleteButton()"\n            ng-click="$ctrl.onDelete({items:$ctrl.selectedList})">\n            delete\n          </button>\n        </th>\n      </tr>\n    </thead>\n    <tbody class="bx--table-body">\n      <tr class="bx--table-row bx--parent-row" ng-if="$ctrl.listItems.length"\n        ng-repeat="item in $ctrl.listItems | filter: {name: $ctrl.filter}"\n        ng-class-even="\'bx--parent-row--even\'" ng-class="{selected:item.selected}">\n        <td class="bxTablePaddingLeft">\n          <md-checkbox class="md-primary"\n            ng-model="item.selected"\n            aria-label="{{item.name}}"\n            ng-change="$ctrl.updateSelectedList()">\n          </md-checkbox>\n          <a class="documentNameLink" ui-sref="{{$ctrl.router}}({id:item.name})"\n            ng-bind-html="item.name | highlight: $ctrl.filter"></a>\n        </td>\n        <td>\n          <span>{{$ctrl.listType}}</span>\n        </td>\n        <td class="bxTablePaddingRight">\n          <button class="iconOnlyButton material-icons"\n            title="{{::\'delete\' | translate}}"\n            ng-click="$ctrl.onDelete({items:[item]})"\n            ng-disabled="xhrProcessing">\n            delete\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n';
},{}]},{},[1]);
