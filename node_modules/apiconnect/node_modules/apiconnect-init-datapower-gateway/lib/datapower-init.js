/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

'use strict'

const Platform = require('./platform')();
const build    = require('./build');
const logger   = require('./logger.js').logger;

function printError (err) {
  if (err.validation) {
    logger.writeToLog(`\n${err.message}\n`);
  }
  else {
    logger.writeToLog(`\n${err.message}\n${err.stack}\n`);
  }
}

/**
 * 
 * @param {object} config 
 */
function initializeDatapower (config) {

  logger.setWriteLog(logger.getWriteLog() || console.log);
  
  logger.writeToLog('Detected platform:', Platform.name());
  let p = Promise.resolve();

  if (config.VALIDATE !== 'disabled') {
    p = p.then(() => Platform.validate()).then(() => {
      logger.writeToLog('\nPassed system validation\n');
    });
  }

  if (config.VALIDATE === 'warn') {
    p = p.catch(err => {
      printError(err);
    });
  }


  if (config.BUILD_V5)
    p = p.then(() => build.v5());

  if (config.BUILD_EXPERIMENTAL)
    p = p.then(() => build.experimental());

  p = p.catch(err => {
    printError(err);
    throw err;
  });

  return p;
}

exports.initializeDatapower = initializeDatapower;