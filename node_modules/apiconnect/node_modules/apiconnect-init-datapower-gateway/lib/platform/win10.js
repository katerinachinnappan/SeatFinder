/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

'use strict';

const os      = require('os');
const dv      = require('apiconnect-mgmt-lite-datapower/lib/docker-validate');
const run     = require('../run');

const DOCKER_PLATFORM = 'Docker for Windows';
const UNINSTALL_TOOLBOX_URL = 'https://docs.docker.com/toolbox/toolbox_install_windows/#how-to-uninstall-toolbox';
const INSTALL_URL = 'https://docs.docker.com/docker-for-windows/install/';
const INSTALL_MSG = `To install ${DOCKER_PLATFORM}, please visit ${INSTALL_URL}`;

const ERRORS = {
  'DOCKER_NOT_FOUND': () => {
    return `
      It appears that ${DOCKER_PLATFORM} has not been installed. 
      ${INSTALL_MSG}`;
  },

  'DOCKER_NOT_ACCESSIBLE': () => {
    return `
      A required command appears to either not exist or cannot be executed. This may mean that ${DOCKER_PLATFORM} has not
      been installed, or the current user does not have permission to use it.
      
      If ${DOCKER_PLATFORM} has been installed, please ensure you are able to run it, or re-install it.
      
      ${INSTALL_MSG}`;
  },

  'BAD_VERSION': msg => {
    let cmd = 'docker(?:-compose)?';
    let ver = '\\d+(?:\\.\\d+)+(?:-ce)?';
    let pattern = `(${cmd}) version (${ver}) or greater is required. Current version: (${ver})`;
    let regex = new RegExp(pattern);
    let infostr = msg.replace(regex, (match, cmd, minver, curver) => `${cmd}\t${minver}\t${curver}`);

    // If we don't get a match for some reason...
    if (msg === infostr)
      return msg;

    // Otherwise...
    let info = infostr.split('\t');
    return `
      It appears that an unsupported version of Docker or ${DOCKER_PLATFORM} has been installed.
      We found ${info[0]} version ${info[3]}, but version ${info[2]} or greater is required.
      
      If you are running ${DOCKER_PLATFORM}, please check for updates via the application.
      
      If you installed Docker Toolbox from docker.com, please first uninstall it with the instructions found at
      ${UNINSTALL_TOOLBOX_URL}
      
      ${INSTALL_MSG}`;
  },

  'INSUFFICIENT_CPU': msg => {
    let regex = /Must have at least 2 CPUs available to docker, your system has (\d+)/;
    let cpus = msg.replace(regex, (match, n) => n);

    // If we don't get a match for some reason...
    if (msg === cpus)
      return msg;

    // Otherwise...
    return `
      Docker must have at least 2 CPUs available, but your system only makes ${cpus} CPUs available to it. Please open
      the Docker Preferences, go to the Advanced tab, and increase the number of CPUs.
      
      Also, please ensure that there are at least 4 GB of memory available to Docker.`;
  },

  'INSUFFICIENT_MEM': msg => {
    let regex = /Must have at least 4 GB of memory available to docker, your system has (\d+) GB/;
    let mem = msg.replace(regex, (match, n) => n);

    // If we don't get a match for some reason...
    if (msg === mem)
      return msg;

    // Otherwise...
    return `
      Docker must have at least 4 GB of memory, but your system only makes ${mem} GB available to it. Please open
      the Docker Preferences, go to the Advanced tab, and increase the amount of memory.
      
      Also, please ensure that there are at least 2 CPUs available to Docker.`;
  },

  'DOCKER_DAEMON_NOT_STARTED': () => {
    return `
      It seems that the Docker daemon is not running at the moment. Please start the Docker daemon.`;
  }
};

const error = require('../error-generator')(ERRORS);

exports.name = () => `Windows 10 (release ${os.release()})`;

exports.validate = () => {
  return run('docker', ['--version'])
    .then(() => dv.validate())
    .catch(err => {
      if (err.code === 'ENOENT' || / must be installed!/.test(err.message))
        throw error('DOCKER_NOT_FOUND');
      if (err.code === 'EACCES')
        throw error('DOCKER_NOT_ACCESSIBLE');
      if (/docker(?:-compose)? version .+ or greater is required/.test(err.message))
        throw error('BAD_VERSION', err.message);
      if (/Must have at least 2 CPUs available to docker/.test(err.message))
        throw error('INSUFFICIENT_CPU', err.message);
      if (/Must have at least 4 GB of memory available to docker/.test(err.message))
        throw error('INSUFFICIENT_MEM', err.message);
      if (/docker info/.test(err.message))
        throw error('DOCKER_DAEMON_NOT_STARTED');
      throw err;
    })
};

