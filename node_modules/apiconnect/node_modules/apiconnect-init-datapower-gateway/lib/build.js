/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

'use strict';

const Promise = require('bluebird');
const Path    = require('path');
const run     = require('./run');
const logger  = require('./logger.js').logger;

const COMPOSE_FILES = {
  v5: 'docker-compose.yml',
  experimental: 'docker-compose-v6.yml'
};

let apimlitePath = Path.dirname(require.resolve('apiconnect-mgmt-lite-datapower'));
let apimlitePkg  = require('apiconnect-mgmt-lite-datapower/package.json');
let env = Object.assign({
  APICONNECT_MGMT_LITE_DOCKER_TAG: apimlitePkg.version
}, process.env);
let buildOptions = {
  cwd: apimlitePath,
  stdio: 'inherit',
  env: env,
  timeout: 1000 * 60 * 10
};

const build = gw => {
  let composeFile = COMPOSE_FILES[gw];
  if (composeFile === undefined)
    return Promise.reject(new Error(`Invalid gateway type: ${gw}`));
  logger.writeToLog(`\nBuilding ${gw} gateway\n`);
  return run('docker-compose', ['-f', composeFile, 'build'], buildOptions)
    .then(() => {
      logger.writeToLog(`\nFinished Building ${gw} gateway`)
    });
};

build.v5 = () => build('v5');
build.experimental = () => build('experimental');

module.exports = build;
