/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/

'use strict';

const VALIDATE_ENABLED = 'enabled';
const VALIDATE_DISABLED = 'disabled';
const VALIDATE_WARN = 'warn';

const BuildConfig = (v5, experimental, validate) => ({
  BUILD_V5: v5,
  BUILD_EXPERIMENTAL: experimental,
  VALIDATE: validate
});

const BuildConfigFromCMD = argv => {
  argv = (argv || process.argv).slice();
  if (argv[0] === process.execPath)
    argv.shift();
  if (argv[0] === process.mainModule.filename)
    argv.shift();

  let config;

  let validate = argv.indexOf('--no-validate') === -1 ? VALIDATE_ENABLED : VALIDATE_DISABLED;
  if (validate === VALIDATE_ENABLED && argv.indexOf('--warn-validate') !== -1)
    validate = VALIDATE_WARN;

  // Remove any non-build related arguments
  argv = argv.filter(arg => /^(v5|experimental|all)$/.test(arg));

  if (argv.length === 0)
    config = BuildConfig(true, false, validate);

  else if (argv.indexOf('all') !== -1)
    config = BuildConfig(true, true, validate);

  else
    config = BuildConfig(argv.indexOf('v5') !== -1, argv.indexOf('experimental') !== -1, validate);

  return config;
};

exports.BuildConfig = BuildConfig;
exports.BuildConfigFromCMD = BuildConfigFromCMD;
exports.VALIDATE_ENABLED = VALIDATE_ENABLED;
exports.VALIDATE_DISABLED = VALIDATE_DISABLED;
exports.VALIDATE_WARN = VALIDATE_WARN;
