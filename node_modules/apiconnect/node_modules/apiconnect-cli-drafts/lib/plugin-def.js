/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect-cli-drafts

/*eslint brace-style: 0, max-len: 0*/
var g = require('strong-globalize')();

module.exports = {
  name: 'drafts',
  version: require('../package.json').version,
  path: __filename,
  isBuiltin: true,
  topics: getTopics,
};

function getTopics() {
  return [ {
    name: 'drafts',
    commands: [
      {
        command: 'clear',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_clear_help.txt'),
        action: function(opts) {
          return require('./plugin-impl').draftsClear(opts);
        },
        options: [
          { name: 'confirm', type: 'name', required: true },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'delete <name[:version]>',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_delete_help.txt'),
        action: function(nameVersion, opts) {
          return require('./plugin-impl').draftsDelete(nameVersion, opts);
        },
        options: [
          { name: 'type', type: 'enum', values: [ 'api', 'product' ] },
          { name: 'product-only', type: 'boolean' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'get <name[:version]>',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_get_help.txt'),
        action: function(nameVersion, opts) {
          return require('./plugin-impl').draftsGet(nameVersion, opts);
        },
        options: [
          { name: 'type', type: 'enum', values: [ 'api', 'product' ] },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'list',
        aliases: [ 'drafts' ],
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_list_help.txt'),
        action: function(opts) {
          return require('./plugin-impl').draftsList(opts);
        },
        options: [
          { name: 'type', type: 'enum', values: [ 'api', 'product' ] },
          { name: 'product-only', type: 'boolean' },
          { name: 'all-organizations', rune: 'O', type: 'boolean' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs' },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'publish <name[:version]>',
        loginRequired: 'catalog',
        type: 'catalog',
        defaultType: true,
        helpInfo: g.f('apic_drafts_publish_help.txt'),
        action: function(nameVersion, opts) {
          return require('./plugin-impl').draftsPublish(nameVersion, opts);
        },
        options: [
          { name: 'catalog', rune: 'c', type: 'name', default: '$APIC_CONFIG$.catalog.data.catalogs', required: true },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.catalog.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.catalog.host', required: true },
          { name: 'stage', type: 'boolean' },
        ],
      },
      {
        command: 'clone',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_clone_help.txt'),
        action: function(opts) {
          return require('./plugin-impl').draftsClone(opts);
        },
        options: [
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'pull <name[:version]>',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_pull_help.txt'),
        action: function(nameVersion, opts) {
          return require('./plugin-impl').draftsPull(nameVersion, opts);
        },
        options: [
          { name: 'type', type: 'enum', values: [ 'api', 'product' ] },
          { name: 'product-only', type: 'boolean' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'push <filename>',
        loginRequired: 'org',
        helpInfo: g.f('apic_drafts_push_help.txt'),
        action: function(fileName, opts) {
          return require('./plugin-impl').draftsPush(fileName, opts);
        },
        options: [
          { name: 'product-only', type: 'boolean' },
          { name: 'replace', rune: 'r', type: 'name-version' },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.org.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.org.host', required: true },
        ],
      },
      {
        command: 'publish <name[:version]>',
        loginRequired: 'space',
        type: 'space',
        helpInfo: g.f('apic_drafts_publish_help.txt'),
        action: function(nameVersion, opts) {
          return require('./plugin-impl').draftsPublish(nameVersion, opts);
        },
        options: [
          { name: 'catalog', rune: 'c', type: 'name', default: '$APIC_CONFIG$.space.data.catalogs', required: true },
          { name: 'organization', rune: 'o', type: 'name', default: '$APIC_CONFIG$.space.data.orgs', required: true },
          { name: 'server', rune: 's', type: 'host', default: '$APIC_CONFIG$.space.host', required: true },
          { name: 'space', type: 'name', default: '$APIC_CONFIG$.space.data.spaces', required: true },
          { name: 'stage', type: 'boolean' },
        ],
      },
    ],
  } ];
};

