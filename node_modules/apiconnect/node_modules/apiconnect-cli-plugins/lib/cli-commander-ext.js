/********************************************************* {COPYRIGHT-TOP} ***
 * Licensed Materials - Property of IBM
 * 5725-Z22, 5725-Z63, 5725-U33, 5725-Z63
 *
 * (C) Copyright IBM Corporation 2016, 2017
 *
 * All Rights Reserved.
 * US Government Users Restricted Rights - Use, duplication or disclosure
 * restricted by GSA ADP Schedule Contract with IBM Corp.
 ********************************************************** {COPYRIGHT-END} **/
// Node module: apiconnect

var Command = require('commander').Command;
var _ = require('lodash');
var d = require('debug')('apiconnect:lib:cli-builder');
var helpLoader = require('./help-loader');
var path = require('path');

Command.prototype.version = function(str, flags) {
  if (arguments.length === 0) {
    return this._version;
  }
  this._version = str;
  flags = flags || '-V, --version';
  this.option(flags, 'output the version number');
  this.on('version', function() {
    this.logger.writeln(str);
  });
  return this;
};

Command.prototype.helpInformation = function() {
  var maxWidth = 0;

  var commands = _.filter(this.commands, function(command) {
    return command.topic && command.topic.length > 0 && !command.isBuiltin;
  }).map(function(command) {
    if (command.topic.length > maxWidth) {
      maxWidth = command.topic.length;
    }
    var description = _.isFunction(command.description) ?
      command.description() : command.description;
    return {
      name: command.topic,
      description: description || '',
    };
  });

  commands = _.uniqWith(commands, _.isEqual);
  var cmdName = path.basename(process.argv[1]);
  if (path.basename(process.argv[1]).endsWith('.js')) {
    cmdName = 'apic';
  }
  var appName = process.env.APIC_CLI || cmdName;
  d('appName %s', appName);
  var apicHelp = helpLoader(appName);

  var help = [
    '',
    apicHelp.replace(/%APPNAME%/g, appName),
    '',
  ];

  if (commands.length > 0) {
    help = help.concat([
      'Additional topics',
      '',
    ]);
    help = help.concat(commands.map(function(command) {
      return '  ' + _.padEnd(command.name, maxWidth + 4) + command.description;
    }));
    help = help.concat([ '' ]);
  }
  return help.join('\n');
};

